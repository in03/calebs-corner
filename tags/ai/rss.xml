<?xml version="1.0" encoding="UTF-8"?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
      <title>Caleb Trevatt - AI</title>
      <link>https://calebtrevatt.com</link>
      <description>A little corner of the internet where I write about things I&#x27;m learning.</description>
      <generator>Zola</generator>
      <language>en</language>
      <atom:link href="https://calebtrevatt.com/tags/ai/rss.xml" rel="self" type="application/rss+xml"/>
      <lastBuildDate>Wed, 22 Jan 2025 00:00:00 +0000</lastBuildDate>
      <item>
          <title>Obsidian Automated AI Voice Workflows</title>
          <pubDate>Wed, 22 Jan 2025 00:00:00 +0000</pubDate>
          <author>Caleb Trevatt</author>
          <link>https://calebtrevatt.com/blog/obsidian-ai-voice-notes/</link>
          <guid>https://calebtrevatt.com/blog/obsidian-ai-voice-notes/</guid>
          <description xml:base="https://calebtrevatt.com/blog/obsidian-ai-voice-notes/">&lt;h2 id=&quot;the-problem-thinking&quot;&gt;The Problem ü§î&lt;&#x2F;h2&gt;
&lt;p&gt;For a long time, I‚Äôve wanted the ability to record voice notes on the go and access them later as text.&lt;&#x2F;p&gt;
&lt;p&gt;No, I‚Äôm not talking about simple dictation, I want something that cuts down on my distracted ‚Äúumms‚Äù, ‚Äúahhs‚Äù, flight-of-ideas, and other incoherent vocalised nonsense as I drive like the incapable-of-multitasking man I am.&lt;&#x2F;p&gt;
&lt;p&gt;For a while, I used &lt;a href=&quot;https:&#x2F;&#x2F;audiopen.ai&#x2F;&quot;&gt;AudioPen&lt;&#x2F;a&gt;, and it was pretty fantastic at condensing everything import into neat little summaries. The features have grown over the years, but I‚Äôm still a little wary of paying a subscription.&lt;&#x2F;p&gt;
&lt;p&gt;I dreamed a little as I entertained the thought of building something out:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;It would be open-source&lt;&#x2F;li&gt;
&lt;li&gt;Ideally extendable&lt;&#x2F;li&gt;
&lt;li&gt;Loosely-coupled to work with a multitude of tools&lt;&#x2F;li&gt;
&lt;li&gt;What if it could run &lt;em&gt;&lt;strong&gt;any&lt;&#x2F;strong&gt;&lt;&#x2F;em&gt; workflow?&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;I couldn‚Äôt find anything like that yet‚Ä¶&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;So I started building my own thing, again.&lt;&#x2F;strong&gt;
(As if I didn‚Äôt start enough projects over my parental leave break ü§¶‚Äç‚ôÇÔ∏èüë∂)&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;h2 id=&quot;the-idea-bulb&quot;&gt;The Idea üí°&lt;&#x2F;h2&gt;
&lt;p&gt;And so &lt;em&gt;&lt;strong&gt;ThinkAloud.md&lt;&#x2F;strong&gt;&lt;&#x2F;em&gt; was born!&lt;&#x2F;p&gt;
&lt;p&gt;(And at time of writing, is very much still a baby)&lt;&#x2F;p&gt;
&lt;p&gt;ü´± &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;in03&#x2F;ThinkAloud&quot;&gt;Check it out!&lt;&#x2F;a&gt; ü´≤&lt;&#x2F;p&gt;
&lt;p&gt;Here‚Äôs the gist:&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Audio Recording&lt;&#x2F;strong&gt;:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Utilise Obsidian‚Äôs built-in audio recording feature to capture voice notes directly within the app.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Git Sync Backend&lt;&#x2F;strong&gt;:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;using &lt;code&gt;fit&lt;&#x2F;code&gt; or &lt;code&gt;git&lt;&#x2F;code&gt; extensions for Obisidian, git push is triggered to GitHub.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;GitHub Actions Workflow&lt;&#x2F;strong&gt;:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;The push initiates a GitHub Actions workflow that processes the new voice note.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Speech-to-Text Conversion&lt;&#x2F;strong&gt;:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;The workflow sends the audio file to AssemblyAI‚Äôs API for transcription.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Content Parsing and Formatting&lt;&#x2F;strong&gt;:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Assembly AI‚Äôs LeMUR parses the transcribed text to extract metadata and formats the content according to predefined templates.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Text-to-Speech (Optional)&lt;&#x2F;strong&gt;:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;If specified in the template, the content is sent to Eleven Labs AI for voice synthesis.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Update Obsidian Note&lt;&#x2F;strong&gt;:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;The processed content is fed back into the original note containing the voice recording.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;h2 id=&quot;the-doing-it-runner&quot;&gt;The Doing It üèÉ&lt;&#x2F;h2&gt;
&lt;p&gt;Granted, it‚Äôs a little async‚Ä¶ I‚Äôm a bit worried that it‚Äôll be too slow. But it‚Äôs very powerful. Anything that can run in a GitHub workflow can influence what ends up in the notes.&lt;&#x2F;p&gt;
&lt;p&gt;My personal uses cases are pretty much all while I‚Äôm commuting. I like to ‚Äúthink out‚Äù long form ideas on-the-go and review my notes quite a bit later, so granted the CI&#x2F;CD workflow doesn‚Äôt fail, it should be fine for me.&lt;&#x2F;p&gt;
&lt;p&gt;If you‚Äôre after similar and are happy with less flexibility, I‚Äôd recommend AudioPen or Obsidian Scribe.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;the-templates-fork-knife-plate&quot;&gt;The Templates üçΩÔ∏è&lt;&#x2F;h2&gt;
&lt;p&gt;Templates guide LeMUR and Eleven Labs AI in processing and formatting the content. Here‚Äôs an example of a ‚Äújournal entry‚Äù template:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;markdown&quot; class=&quot;language-markdown z-code&quot;&gt;&lt;code class=&quot;language-markdown&quot; data-lang=&quot;markdown&quot;&gt;&lt;span class=&quot;z-text z-html z-markdown&quot;&gt;&lt;span class=&quot;z-meta z-block-level z-markdown&quot;&gt;&lt;span class=&quot;z-meta z-separator z-thematic-break z-markdown&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-thematic-break z-markdown&quot;&gt;---&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-html z-markdown&quot;&gt;&lt;span class=&quot;z-meta z-paragraph z-markdown&quot;&gt;author: {{ Author }}
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-html z-markdown&quot;&gt;&lt;span class=&quot;z-meta z-paragraph z-markdown&quot;&gt;date: {{ Date }} 
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-html z-markdown&quot;&gt;&lt;span class=&quot;z-meta z-paragraph z-markdown&quot;&gt;tags: journal, diary, log
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-html z-markdown&quot;&gt;&lt;span class=&quot;z-meta z-paragraph z-markdown&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-html z-markdown&quot;&gt;&lt;span class=&quot;z-meta z-paragraph z-markdown&quot;&gt;match_phrase: captains log
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-html z-markdown&quot;&gt;&lt;span class=&quot;z-meta z-paragraph z-markdown&quot;&gt;process_stt: ready
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-html z-markdown&quot;&gt;&lt;span class=&quot;z-meta z-paragraph z-markdown&quot;&gt;process_tts: ready 
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-html z-markdown&quot;&gt;&lt;span class=&quot;z-meta z-paragraph z-markdown&quot;&gt;&lt;span class=&quot;z-markup z-heading z-2 z-setext z-markdown&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-heading z-setext z-markdown&quot;&gt;---&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-html z-markdown&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-html z-markdown&quot;&gt;&lt;span class=&quot;z-meta z-block-level z-markdown&quot;&gt;&lt;span class=&quot;z-markup z-heading z-1 z-markdown&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-heading z-begin z-markdown&quot;&gt;#&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-markup z-heading z-1 z-markdown&quot;&gt;&lt;span class=&quot;z-entity z-name z-section z-markdown&quot;&gt;{{ Title }}&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-whitespace z-newline z-markdown&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-html z-markdown&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-html z-markdown&quot;&gt;&lt;span class=&quot;z-meta z-block-level z-markdown&quot;&gt;&lt;span class=&quot;z-markup z-heading z-2 z-markdown&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-heading z-begin z-markdown&quot;&gt;##&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-markup z-heading z-2 z-markdown&quot;&gt;&lt;span class=&quot;z-entity z-name z-section z-markdown&quot;&gt;In a Nutshell&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-whitespace z-newline z-markdown&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-html z-markdown&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-html z-markdown&quot;&gt;&lt;span class=&quot;z-meta z-paragraph z-markdown&quot;&gt;&lt;span class=&quot;z-markup z-italic z-markdown&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-italic z-begin z-markdown&quot;&gt;*&lt;&#x2F;span&gt;Today I was feeling...&lt;span class=&quot;z-punctuation z-definition z-italic z-end z-markdown&quot;&gt;*&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-html z-markdown&quot;&gt;&lt;span class=&quot;z-meta z-paragraph z-markdown&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-html z-markdown&quot;&gt;&lt;span class=&quot;z-meta z-paragraph z-markdown&quot;&gt;{{ Tone&#x2F;Emotion, 3 lines }}
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-html z-markdown&quot;&gt;&lt;span class=&quot;z-meta z-paragraph z-markdown&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-html z-markdown&quot;&gt;&lt;span class=&quot;z-meta z-paragraph z-markdown&quot;&gt;&lt;span class=&quot;z-markup z-bold z-markdown&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-bold z-begin z-markdown&quot;&gt;**&lt;&#x2F;span&gt;Context&lt;span class=&quot;z-punctuation z-definition z-bold z-end z-markdown&quot;&gt;**&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;: {{ Context. When, where, etc. 50 words }}
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-html z-markdown&quot;&gt;&lt;span class=&quot;z-meta z-paragraph z-markdown&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-html z-markdown&quot;&gt;&lt;span class=&quot;z-meta z-paragraph z-markdown&quot;&gt;{{ Provide a synopsis on the journal entry, roughly a paragraph }}
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-html z-markdown&quot;&gt;&lt;span class=&quot;z-meta z-paragraph z-markdown&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-html z-markdown&quot;&gt;&lt;span class=&quot;z-meta z-block-level z-markdown&quot;&gt;&lt;span class=&quot;z-markup z-heading z-2 z-markdown&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-heading z-begin z-markdown&quot;&gt;##&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-markup z-heading z-2 z-markdown&quot;&gt;&lt;span class=&quot;z-entity z-name z-section z-markdown&quot;&gt;Key points&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-whitespace z-newline z-markdown&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-html z-markdown&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-html z-markdown&quot;&gt;&lt;span class=&quot;z-meta z-paragraph z-markdown&quot;&gt;{{ Key points, 3 - 5 }}
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-html z-markdown&quot;&gt;&lt;span class=&quot;z-meta z-paragraph z-markdown&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-html z-markdown&quot;&gt;&lt;span class=&quot;z-meta z-block-level z-markdown&quot;&gt;&lt;span class=&quot;z-markup z-heading z-2 z-markdown&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-heading z-begin z-markdown&quot;&gt;##&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-markup z-heading z-2 z-markdown&quot;&gt;&lt;span class=&quot;z-entity z-name z-section z-markdown&quot;&gt;Full text&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-whitespace z-newline z-markdown&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-html z-markdown&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-html z-markdown&quot;&gt;&lt;span class=&quot;z-meta z-paragraph z-markdown&quot;&gt;{{ Provide verbatim transcript lightly cleaned up: &amp;quot;umms&amp;quot;, &amp;quot;ahhs&amp;quot;, stutters, grammatical mistakes removed etc. }}
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;In a nutshell, the syntax is pretty much this:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;markdown&quot; class=&quot;language-markdown z-code&quot;&gt;&lt;code class=&quot;language-markdown&quot; data-lang=&quot;markdown&quot;&gt;&lt;span class=&quot;z-text z-html z-markdown&quot;&gt;&lt;span class=&quot;z-meta z-paragraph z-markdown&quot;&gt;I am a &lt;span class=&quot;z-markup z-bold z-markdown&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-bold z-begin z-markdown&quot;&gt;**&lt;&#x2F;span&gt;static&lt;span class=&quot;z-punctuation z-definition z-bold z-end z-markdown&quot;&gt;**&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-markup z-strikethrough z-markdown-gfm&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-strikethrough z-begin z-markdown&quot;&gt;~~&lt;&#x2F;span&gt;potato&lt;span class=&quot;z-punctuation z-definition z-strikethrough z-end z-markdown&quot;&gt;~~&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-markup z-italic z-markdown&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-italic z-begin z-markdown&quot;&gt;*&lt;&#x2F;span&gt;markdown&lt;span class=&quot;z-punctuation z-definition z-italic z-end z-markdown&quot;&gt;*&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; string, I will be completely ignored by the LLM for context&amp;#39;s sake.
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-html z-markdown&quot;&gt;&lt;span class=&quot;z-meta z-paragraph z-markdown&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-html z-markdown&quot;&gt;&lt;span class=&quot;z-meta z-block-level z-markdown&quot;&gt;&lt;span class=&quot;z-markup z-heading z-2 z-markdown&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-heading z-begin z-markdown&quot;&gt;##&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-markup z-heading z-2 z-markdown&quot;&gt;&lt;span class=&quot;z-entity z-name z-section z-markdown&quot;&gt;Big Ol&amp;#39; MD Heading&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-whitespace z-newline z-markdown&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-html z-markdown&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-html z-markdown&quot;&gt;&lt;span class=&quot;z-meta z-paragraph z-markdown&quot;&gt;{{ I am a placeholder string. Put instructions in me for the LLM to follow}}
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-html z-markdown&quot;&gt;&lt;span class=&quot;z-meta z-paragraph z-markdown&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-html z-markdown&quot;&gt;&lt;span class=&quot;z-meta z-paragraph z-markdown&quot;&gt;&#x2F;&#x2F; I am a comment. I will be stripped out of the final output.
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;blockquote class=&quot;note&quot;&gt;
	&lt;p class=&quot;alert-title&quot;&gt;
		&lt;i class=&quot;icon&quot;&gt;&lt;&#x2F;i&gt;Note&lt;&#x2F;p&gt;
	&lt;p&gt;Not really sure about the comment syntax. Markdown is funny with comments. They‚Äôre not really part of the ‚Äúspec‚Äù.&lt;&#x2F;p&gt;

&lt;&#x2F;blockquote&gt;
&lt;h2 id=&quot;the-power-zap&quot;&gt;The Power ‚ö°Ô∏è&lt;&#x2F;h2&gt;
&lt;p&gt;Since the templates are processed by a GPT, you can get really creative üé® You can even chain further workflows to automate further:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Clean up ad-lib artefacts&lt;&#x2F;strong&gt;: ‚Äúumms‚Äù and ‚Äúahhs‚Äù,
mistakes, stutters, silences.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Re-record&lt;&#x2F;strong&gt;: Swap your noisy car voice-note with a professional studio-quality voice-over using &lt;a href=&quot;https:&#x2F;&#x2F;elevenlabs.io&#x2F;&quot;&gt;ElevenLabs&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Speaker diarisation&lt;&#x2F;strong&gt;: Title each reader uniquely for conversational dialogue, like for a podcast.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Journal&lt;&#x2F;strong&gt;: Summarise your whole day as a structured journal entry with time and place context, emotional analysis, key points, etc.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Populate Dataviews&lt;&#x2F;strong&gt;: Populate Obsidian dataview fields, autofill tables, queries and kick-off Javascript tasks.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Integrate with Workflow&lt;&#x2F;strong&gt;: &lt;a href=&quot;https:&#x2F;&#x2F;n8n.io&#x2F;&quot;&gt;n8n&lt;&#x2F;a&gt; workflows.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Blogging&lt;&#x2F;strong&gt;: Create draft posts that match the structure and tone of your personal blog, or even publish directly to GitHub pages afterwards.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Social Cross-Posting&lt;&#x2F;strong&gt;: Publish to multiple social media platforms at once, respecting their various algorithms.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;BYD&lt;&#x2F;strong&gt;: Generate and publish proof-of-concept apps from spur-of-the-moment app ideas.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;hr &#x2F;&gt;
&lt;h2 id=&quot;existing-solutions&quot;&gt;Existing Solutions&lt;&#x2F;h2&gt;
&lt;p&gt;While developing this workflow, I explored existing plugins that offer similar functionalities:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;vincentbavitz&#x2F;obsidian-vox&quot;&gt;Obsidian Vox&lt;&#x2F;a&gt;&lt;&#x2F;strong&gt;:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Automatically transcribes audio notes, extracting metadata, categories, and tags.&lt;&#x2F;li&gt;
&lt;li&gt;Frontmatter and verbatim text only, no templating or workflows.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;djmango&#x2F;obsidian-transcription&quot;&gt;Obsidian Transcription&lt;&#x2F;a&gt;&lt;&#x2F;strong&gt;:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Creates high-quality text transcriptions from media files using OpenAI‚Äôs Whisper.&lt;&#x2F;li&gt;
&lt;li&gt;Verbatim text only, no templating or workflows.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Mikodin&#x2F;obsidian-scribe&quot;&gt;Obsidian Scribe&lt;&#x2F;a&gt;&lt;&#x2F;strong&gt;:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Records voice notes, transcribes, summarises, and enriches them with AI.&lt;&#x2F;li&gt;
&lt;li&gt;Ask questions mid recording, automatically filled in.&lt;&#x2F;li&gt;
&lt;li&gt;Still no workflows.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;These plugins offer valuable features, and I could have settled with Vox or Scribe. But while I really enjoy Obsidian, I love the idea of being able to use this for any markdown notes, anywhere.&lt;&#x2F;p&gt;
&lt;p&gt;Better yet is the flexibility of being able to kick off all sorts of actions with CI&#x2F;CD workflows!&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;Stay tuned for updates as this project progresses! ‚ú®&lt;&#x2F;p&gt;
</description>
      </item>
      <item>
          <title>Stress-Scapes are Poised to Dethrone your &quot;Chill Study&quot;</title>
          <pubDate>Sun, 19 Jan 2025 00:00:00 +0000</pubDate>
          <author>Caleb Trevatt</author>
          <link>https://calebtrevatt.com/blog/stress-scapes/</link>
          <guid>https://calebtrevatt.com/blog/stress-scapes/</guid>
          <description xml:base="https://calebtrevatt.com/blog/stress-scapes/">&lt;h2 id=&quot;the-problem&quot;&gt;The Problem&lt;&#x2F;h2&gt;
&lt;p&gt;Spotify, YouTube and Soundcloud have no shortage of lush, rainy, chill songs and soundscapes to keep you calm and stress-free as you focus on your tasks. They freckle the internet in playlists under benign keywords such as ‚Äúconcentration‚Äù, ‚Äúfocus‚Äù, ‚Äúambient‚Äù, ‚Äúlofi‚Äù and ‚Äústudy‚Äù, you know the ones I mean. But don‚Äôt be fooled. They‚Äôre hardly harmless freckles. They‚Äôre more like malignant moles. If you don‚Äôt cut them out of your life, they will &lt;code&gt;suck the energy from your very soul&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;They mostly present in two-subgenres, with the overarching genre being &lt;strong&gt;Pure Evil&lt;&#x2F;strong&gt;.&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;blockquote class=&quot;caution&quot;&gt;
	&lt;p class=&quot;alert-title&quot;&gt;
		&lt;i class=&quot;icon&quot;&gt;&lt;&#x2F;i&gt;Caution&lt;&#x2F;p&gt;
	&lt;p&gt;&lt;strong&gt;Trigger Warning!&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The next two headings contain &lt;strong&gt;real Spotify playlists&lt;&#x2F;strong&gt; that demonstrate the dangerous effects of these playlists.
If you are operating heavy machinery, pregnant or breastfeeding, have a heart condition, or are a known fall risk, please consider skipping ahead.&lt;&#x2F;p&gt;

&lt;&#x2F;blockquote&gt;
&lt;h3 id=&quot;lo-fi&quot;&gt;Lo-Fi&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;The cover art is an anime girl studying.&lt;&#x2F;li&gt;
&lt;li&gt;You can‚Äôt remember the title: &lt;em&gt;‚ÄúWas it ‚Äòambient lofi study‚Äô or ‚Äòlofi study ambient‚Äô?‚Äù&lt;&#x2F;em&gt;&lt;&#x2F;li&gt;
&lt;li&gt;You can‚Äôt name a single artist on the playlist.&lt;&#x2F;li&gt;
&lt;li&gt;You can‚Äôt even name a single song.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;To help you identify, see the below playlist. &lt;strong&gt;Tread carefully.&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;iframe style=&quot;border-radius:12px&quot; src=&quot;https:&#x2F;&#x2F;open.spotify.com&#x2F;embed&#x2F;playlist&#x2F;52mdjKHZb4ML7yfUoHfFRq?utm_source=generator&quot; width=&quot;100%&quot; height=&quot;352&quot; frameBorder=&quot;0&quot; allowfullscreen=&quot;&quot; allow=&quot;autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture&quot; loading=&quot;lazy&quot;&gt;&lt;&#x2F;iframe&gt;
&lt;h3 id=&quot;soundscapes&quot;&gt;Soundscapes&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;There‚Äôs no music, just sounds.&lt;&#x2F;li&gt;
&lt;li&gt;Involves coloured noise of some sort: white-noise, pink-noise, brown-noise.&lt;&#x2F;li&gt;
&lt;li&gt;Rain, waterfalls, thunderstorms, birds, rainforests and forest walks.&lt;&#x2F;li&gt;
&lt;li&gt;Low-key intuition that someone French made the playlist.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Here‚Äôs an example. &lt;strong&gt;Don‚Äôt fall asleep!&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;iframe style=&quot;border-radius:12px&quot; src=&quot;https:&#x2F;&#x2F;open.spotify.com&#x2F;embed&#x2F;album&#x2F;5TOJCAChXSkhis9AjkVgBx?utm_source=generator&quot; width=&quot;100%&quot; height=&quot;352&quot; frameBorder=&quot;0&quot; allowfullscreen=&quot;&quot; allow=&quot;autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture&quot; loading=&quot;lazy&quot;&gt;&lt;&#x2F;iframe&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;‚ÄúWhat‚Äôs the big fuss about? These sound nice, don‚Äôt they?‚Äù you think, probably. And yes, they do. But ‚Äúnice‚Äù doesn‚Äôt put bread on the table and you know it.&lt;&#x2F;p&gt;
&lt;p&gt;Have you ever applied for a job and employed the phrase ‚Äúwork well under pressure‚Äù (&lt;a href=&quot;https:&#x2F;&#x2F;www.tealhq.com&#x2F;resume-synonyms&#x2F;works-well-under-pressure?t&quot;&gt;or some variation&lt;&#x2F;a&gt;), somewhere in the process? No doubt you have, the stats don‚Äôt lie. You‚Äôd be in the company of 75% of the US workforce.&lt;&#x2F;p&gt;
&lt;p&gt;Now it‚Äôs time for a self-check‚Ä¶&lt;&#x2F;p&gt;
&lt;p&gt;If you truly believe you work well under pressure, &lt;strong&gt;stop doing yourself a disservice and sinking yourself into a cozy aural spa-bath when you want to get work done!&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;the-solution&quot;&gt;The Solution&lt;&#x2F;h2&gt;
&lt;p&gt;To be fair, you can‚Äôt blame yourself. Any real alternatives are sorely lacking. We need content tailored to true productivity, not whitelabelled Yoga music that makes everyone numb and dumb. Those with some self-awareness try to hype themselves up with gas-station metal or doofy B-grade gym pop they don‚Äôt even like. Productivity-centric soundscapes are the summit of sonic empowerment, yet so far out of reach, no one has dared to dream of them. Until now‚Ä¶&lt;&#x2F;p&gt;
&lt;p&gt;Today I propose the concept of the &lt;em&gt;Stress-Scape&lt;&#x2F;em&gt;‚Ñ¢‚Ä¶&lt;&#x2F;p&gt;
&lt;p&gt;Here‚Äôs a taste of a single I‚Äôm working on:&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Corporate Skyscraper Fire Evacuation&lt;&#x2F;strong&gt;&lt;&#x2F;em&gt; üî•üò±&lt;&#x2F;p&gt;
&lt;audio controls&gt;
  &lt;source src=&quot;Corporate Skyscraper Fire Evacuation (Demo).mp3&quot; type=&quot;audio&#x2F;mp3&quot;&gt;
  Your browser does not support the audio element.
&lt;&#x2F;audio&gt;
&lt;p&gt;Complete with screams, sirens, quickening flames and all the keystrokes of a thousand employees madly finishing an email before their building collapses.&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;I‚Äôm aware different people have different stressors, so if a burning building isn‚Äôt your thing, take heart ‚Äì a full album is in the works! Including 14 hustle-inducing hits:&lt;&#x2F;p&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;#&lt;&#x2F;th&gt;&lt;th&gt;Title&lt;&#x2F;th&gt;&lt;&#x2F;tr&gt;&lt;&#x2F;thead&gt;&lt;tbody&gt;
&lt;tr&gt;&lt;td&gt;1&lt;&#x2F;td&gt;&lt;td&gt;Neverending THX Intro&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;2&lt;&#x2F;td&gt;&lt;td&gt;Mass Childcare Tantrum&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;3&lt;&#x2F;td&gt;&lt;td&gt;Caving Claustrophobia in C Minor&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;4&lt;&#x2F;td&gt;&lt;td&gt;Corporate Skyscraper Fire Evacuation&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;5&lt;&#x2F;td&gt;&lt;td&gt;No one lives in this faulty submarine&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;6&lt;&#x2F;td&gt;&lt;td&gt;Airplane Baby and the Chair Kickers&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;7&lt;&#x2F;td&gt;&lt;td&gt;Manager Breathing Down your Neck&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;8&lt;&#x2F;td&gt;&lt;td&gt;McMedley: Beeping and Burgers&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;9&lt;&#x2F;td&gt;&lt;td&gt;Hell‚Äôs Kitchen‚Äôs Kitchen&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;10&lt;&#x2F;td&gt;&lt;td&gt;Untethered in Deep Space&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;11&lt;&#x2F;td&gt;&lt;td&gt;Late to your own Wedding&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;12&lt;&#x2F;td&gt;&lt;td&gt;A Whole Day of Hard Work with a Blocked Left Ear&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;13&lt;&#x2F;td&gt;&lt;td&gt;Desperate for a Toilet in a Foreign Country&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;14&lt;&#x2F;td&gt;&lt;td&gt;Family Dinner: Awkward Pregnancy Announcement&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;&#x2F;tbody&gt;&lt;&#x2F;table&gt;
&lt;hr &#x2F;&gt;
&lt;h2 id=&quot;the-method&quot;&gt;The Method&lt;&#x2F;h2&gt;
&lt;p&gt;For a long time, this album was just a pipe-dream. Thanks to key innovations and cutting-edge technological advancements made possible by AI, it‚Äôs a reality.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Stress-Scapes&lt;&#x2F;em&gt;‚Ñ¢ implements these key attributes for peak productivity panic:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;AI-Powered Realistic Gibberish&lt;&#x2F;strong&gt;&lt;br &#x2F;&gt;
Many of these tracks will attempt to alienate you with highly realistic speech of almost-words, using the sonic crumbs of LLM latent-space. A foreign language is native to someone, and no one deserves to feel excluded in being excluded. That‚Äôs why we have carefully sampled phonemes from a multitude of languages, including rare ones from Arabic, German, French, Spanish, Hindi, Mandarin, Sindhi, Somali, Zulu and, Xhosa.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Degraded AI SFX&lt;&#x2F;strong&gt;&lt;br &#x2F;&gt;
Many of the sound effects are completely syntheised from AI text prompts. You can thank &lt;a href=&quot;https:&#x2F;&#x2F;elevenlabs.io&#x2F;&quot;&gt;ElevenLabs&lt;&#x2F;a&gt;‚Äôs cutting edge generative AI audio for the sound effects and realistic office-worker chatter. While high-quality and realistic by design, adding the suffix ‚Äúbut just a bit off‚Ä¶‚Äù tweaks each sound effect to incorporate some uncanny strangeness that leaves you feeling a little bit unsafe.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Well-Disguised Shepard Tones&lt;&#x2F;strong&gt;&lt;br &#x2F;&gt;
A key feature throughout the album. Shepard tones bring tension that never resolves. The sonic equivalent of stairs the never stop climbing, hidden shepard tones create the sensation of endless escalation.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Hyper-Precise Binaural Audio&lt;&#x2F;strong&gt;&lt;br &#x2F;&gt;
This puts the stress where it belongs ‚Äî right behind you. Binaural recordings and simulations position sounds with unsettling realism. You‚Äôll need headphones to experience it properly.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Unpredictable Rhythmic Disruptions&lt;&#x2F;strong&gt;&lt;br &#x2F;&gt;
Any mental foothold you expect in sonic patterns or structure is quickly subverted. That frustrated feeling you get when you‚Äôre between department stores that are playing two different songs? Bottled up just for you.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;hr &#x2F;&gt;
&lt;h2 id=&quot;the-end&quot;&gt;The End&lt;&#x2F;h2&gt;
&lt;p&gt;None of this would work if these Stress-Scapes weren‚Äôt crafted to leave room for &lt;strong&gt;you&lt;&#x2F;strong&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;They are the backdrop for your productive work and will never encroach on your main-character energy.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;&lt;del&gt;Keep Calm&lt;&#x2F;del&gt; Keep Panicked and Carry On&lt;&#x2F;strong&gt;.&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;blockquote class=&quot;tip&quot;&gt;
	&lt;p class=&quot;alert-title&quot;&gt;
		&lt;i class=&quot;icon&quot;&gt;&lt;&#x2F;i&gt;Tip&lt;&#x2F;p&gt;
	&lt;p&gt;&lt;strong&gt;For those who have questions‚Ä¶&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;Yes, it‚Äôs a joke.&lt;&#x2F;li&gt;
&lt;li&gt;I am actually working on an album of Stress-Scapes.&lt;&#x2F;li&gt;
&lt;li&gt;No, Stress-Scapes isn‚Äôt really trademarked‚Ä¶ Yet.&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;

&lt;&#x2F;blockquote&gt;
</description>
      </item>
      <item>
          <title>I think I might suck at blogging...</title>
          <pubDate>Sat, 07 Dec 2024 00:00:00 +0000</pubDate>
          <author>Caleb Trevatt</author>
          <link>https://calebtrevatt.com/blog/how-to-blog/</link>
          <guid>https://calebtrevatt.com/blog/how-to-blog/</guid>
          <description xml:base="https://calebtrevatt.com/blog/how-to-blog/">&lt;h1 id=&quot;the-problem&quot;&gt;The Problem&lt;&#x2F;h1&gt;
&lt;p&gt;I changed my theme recently. I actually changed my whole website. I was wrestling with some build issues in Hugo, so I switched to Zola. So far, so good.&lt;&#x2F;p&gt;
&lt;p&gt;In porting my old posts, I realised they were &lt;strong&gt;Very Poor Quality&lt;&#x2F;strong&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;I was a bit disappointed to find out how much even I didn‚Äôt want to read these posts 6 months later.
Clearly I needed to work on this if I was going to ramp it up again. So, like many of modern first-world problems, I took it to ChatGPT with a kind of hopeful curiousity it would give me a magic solution:&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;‚ÄúI‚Äôve tried to get into blogging, but whenever I start, the blog post gets way too big, the meaning gets mushy and even I wouldn‚Äôt want to read it. I‚Äôve got three or four so far and they‚Äôre all enormous and &lt;strong&gt;really boring&lt;&#x2F;strong&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;They also take a huge amount of effort. And my post frequency has gone way down because of it. I guess that‚Äôs becayse I‚Äôve started dreading doing it.&lt;&#x2F;p&gt;
&lt;p&gt;I want my posts to be meaningful. First and foremost to me. I want my blogging to be an extension of my note taking, but be the really important or useful&#x2F;thoughtful stuff that helps others, or stuff I really want to highlight to myself so I don‚Äôt forget.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;How do I blog better?&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;del&gt;Help me, Obi-Wan Kenobi. You‚Äôre my only hope.&lt;&#x2F;del&gt;‚Äú&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h1 id=&quot;the-solution&quot;&gt;The Solution&lt;&#x2F;h1&gt;
&lt;p&gt;Thus, the Oracle responded:&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;‚ÄúIt sounds like you‚Äôre caught in the common trap of over-ambition when blogging, where the desire for perfection or depth makes the process unwieldy and unenjoyable. Here‚Äôs a framework to help you blog better‚Äù&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h2 id=&quot;a-better-blogging-framework&quot;&gt;A Better Blogging Framework&lt;&#x2F;h2&gt;
&lt;p&gt;It sounds like you‚Äôre caught in the common trap of over-ambition when blogging, where the desire for perfection or depth makes the process unwieldy and unenjoyable. Here‚Äôs a framework to help you blog better:&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;h3 id=&quot;1-redefine-what-meaningful-means-thought-balloon&quot;&gt;1. Redefine What ‚ÄúMeaningful‚Äù Means üí≠&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;A post doesn‚Äôt have to be exhaustive to be meaningful. Focus on &lt;strong&gt;one insight, idea, or question per post&lt;&#x2F;strong&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;Your blog can serve as &lt;strong&gt;‚Äúworking thoughts‚Äù&lt;&#x2F;strong&gt; rather than finished masterpieces. Treat it as an ongoing conversation with yourself and your readers.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Definitely struggled with this one. I would start a post, and then think ‚Äúwell, I should probably expand on this, or add this, or include that‚Ä¶‚Äù and then I‚Äôd end up with a massive post that didn‚Äôt really adhere to the idea I wanted to share. It would just become a preachy jumble of thoughts.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;hr &#x2F;&gt;
&lt;h3 id=&quot;2-start-small-and-specific-memo&quot;&gt;2. Start Small and Specific üìù&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Break your ideas into smaller pieces.&lt;&#x2F;strong&gt; If your draft is massive, split it into a series of posts. For example:
&lt;ul&gt;
&lt;li&gt;Post 1: The problem or context.&lt;&#x2F;li&gt;
&lt;li&gt;Post 2: An insight or solution.&lt;&#x2F;li&gt;
&lt;li&gt;Post 3: Reflection or practical application.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Agree üëç I think if I can exercise #1 properly, I won‚Äôt actually need to do this often. Unless it‚Äôs a great topic worth a lot of conversation.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;hr &#x2F;&gt;
&lt;h3 id=&quot;3-write-for-your-past-self-child-arrow-left&quot;&gt;3. Write for Your Past Self üßí ‚¨ÖÔ∏è&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;Imagine you‚Äôre writing to help a version of yourself from 6-12 months ago. This will:
&lt;ul&gt;
&lt;li&gt;Sharpen your focus.&lt;&#x2F;li&gt;
&lt;li&gt;Keep the content relatable and actionable.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Interesting. I took the popularity of the &lt;em&gt;Learning in Public&lt;&#x2F;em&gt; movement as permission to write publicly as a non-expert, but I keep finding myself writing as if I &lt;em&gt;am&lt;&#x2F;em&gt; an expert. Maybe that‚Äôs an &lt;strong&gt;ego-check&lt;&#x2F;strong&gt;.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;hr &#x2F;&gt;
&lt;h3 id=&quot;4-use-templates-to-structure-posts-page-facing-up&quot;&gt;4. Use Templates to Structure Posts üìÑ&lt;&#x2F;h3&gt;
&lt;p&gt;A template can help keep your writing concise and focused:&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Hook&lt;&#x2F;strong&gt;: Why this topic matters (1-2 sentences).&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Main Idea&lt;&#x2F;strong&gt;: What‚Äôs the core point you‚Äôre sharing?&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Supporting Points&lt;&#x2F;strong&gt;: 2-3 short paragraphs that back it up.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Reflection or Call to Action&lt;&#x2F;strong&gt;: What‚Äôs the takeaway? How can this help others or yourself in the future?&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;blockquote&gt;
&lt;p&gt;I‚Äôve never done this. I‚Äôve always just written. I‚Äôll give it a shot.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;hr &#x2F;&gt;
&lt;h3 id=&quot;5-limit-writing-time-alarm-clock&quot;&gt;5. Limit Writing Time ‚è∞&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Set a timer for 30-60 minutes.&lt;&#x2F;strong&gt; Treat it as an experiment in speed and clarity.&lt;&#x2F;li&gt;
&lt;li&gt;Publish after one or two edits. Imperfect but consistent posts are better than perfect ones that never happen.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;blockquote&gt;
&lt;p&gt;I really like this idea. I‚Äôve been getting into the Pomodoro Technique recently and I‚Äôm finding it really helps. This could be a healthy application of the same principles.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;hr &#x2F;&gt;
&lt;h3 id=&quot;6-treat-your-blog-like-a-curation-space-books&quot;&gt;6. Treat Your Blog Like a Curation Space üìö&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;If a full blog post feels too heavy, share:
&lt;ul&gt;
&lt;li&gt;A key takeaway from a book or podcast.&lt;&#x2F;li&gt;
&lt;li&gt;A solution to a problem you solved at work.&lt;&#x2F;li&gt;
&lt;li&gt;A reflective ‚Äúaha moment‚Äù in a few paragraphs.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;These smaller posts still add value and showcase your thinking.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Really good idea.&lt;&#x2F;strong&gt; I‚Äôve done that a little for social media (LinkedIn and Twitter) but I hadn‚Äôt practiced that with blogging.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;hr &#x2F;&gt;
&lt;h3 id=&quot;7-iterate-and-expand-later&quot;&gt;7. Iterate and Expand Later&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;A blog post doesn‚Äôt have to be a final product. Treat it like a &lt;strong&gt;‚Äúversion 1.0‚Äù&lt;&#x2F;strong&gt; that you can refine or expand over time.&lt;&#x2F;li&gt;
&lt;li&gt;Link posts together, turning smaller pieces into a cohesive body of work.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;blockquote&gt;
&lt;p&gt;While I like the idea, I think I lack the discipline to practice it. I‚Äôve mentioned things I want to cover at the end of previous posts, and then never got back to them. Maybe I‚Äôd rework this as #2. If I think it needs to be expanded, I‚Äôll either make sure I‚Äôm really committed to finishing it or I‚Äôll draft the post and split it up once the whole series is finished.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;hr &#x2F;&gt;
&lt;h3 id=&quot;8-write-what-you-d-want-to-read&quot;&gt;8. Write What You‚Äôd Want to Read&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Use bullet points, bold headings, and concise sentences.&lt;&#x2F;strong&gt; These make posts more readable and less intimidating to write.&lt;&#x2F;li&gt;
&lt;li&gt;Ask yourself: ‚ÄúIf I stumbled upon this, would I read it?‚Äù&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Definitely have not been doing that. Clearly üòÇ&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;hr &#x2F;&gt;
&lt;h3 id=&quot;9-use-feedback-loops&quot;&gt;9. Use Feedback Loops&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;Share drafts with trusted peers or mentors for feedback. Their perspective can help you identify mushy sections.&lt;&#x2F;li&gt;
&lt;li&gt;Analytics can also reveal which posts resonate most.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;blockquote&gt;
&lt;p&gt;üëç&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;hr &#x2F;&gt;
&lt;h3 id=&quot;10-remember-blogging-is-practice&quot;&gt;10. Remember: Blogging Is Practice&lt;&#x2F;h3&gt;
&lt;p&gt;Every post improves your ability to communicate ideas effectively. Even ‚Äúboring‚Äù or ‚Äúimperfect‚Äù ones are a step forward.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;ü§ó&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;hr &#x2F;&gt;
&lt;h3 id=&quot;next-steps&quot;&gt;Next Steps&lt;&#x2F;h3&gt;
&lt;ol&gt;
&lt;li&gt;Choose one of your &lt;del&gt;massive drafts&lt;&#x2F;del&gt; junky old posts. Extract a single idea and rewrite it using the template above.&lt;&#x2F;li&gt;
&lt;li&gt;Publish it quickly. Don‚Äôt overthink it.&lt;&#x2F;li&gt;
&lt;li&gt;Commit to a smaller post for your next one to build momentum.&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;By focusing on these practices, you‚Äôll find blogging more manageable and rewarding while steadily building a meaningful portfolio of posts that reflect your growth.&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;h1 id=&quot;final-thoughts&quot;&gt;Final Thoughts&lt;&#x2F;h1&gt;
&lt;p&gt;I doubt you‚Äôre reading this because you want &lt;em&gt;my&lt;&#x2F;em&gt; thoughts on blogging.
If you wanted help with blogging, you could have asked ChatGPT yourself!&lt;&#x2F;p&gt;
&lt;p&gt;You know that. I know that. So why did I write this at all?&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;To keep me accountable.&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;I may not follow to the letter, but if it‚Äôs here amongst my other posts to keep me in check.&lt;&#x2F;p&gt;
&lt;div class=&quot;crt scanlines&quot; aria-hidden=&quot;true&quot;&gt;
	&lt;pre class=&quot;z-code&quot;&gt;&lt;code&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;Remember...
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;                                             
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt; _____     _                        _        _       _             
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;|     |___| |_ ___    ___ ___ ___ _| |   ___| |_ ___|_|___ ___ ___ 
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;| | | | .&amp;#39;| &amp;#39;_| -_|  | . | . | . | . |  |  _|   | . | |  _| -_|_ -|
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;|_|_|_|__,|_,_|___|  |_  |___|___|___|  |___|_|_|___|_|___|___|___|
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;                     |___|                                         
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-text z-plain&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;

&lt;&#x2F;div&gt;
</description>
      </item>
      <item>
          <title>How DRY should I be?</title>
          <pubDate>Thu, 20 Jun 2024 00:00:00 +0000</pubDate>
          <author>Caleb Trevatt</author>
          <link>https://calebtrevatt.com/blog/how-dry-should-i-be/</link>
          <guid>https://calebtrevatt.com/blog/how-dry-should-i-be/</guid>
          <description xml:base="https://calebtrevatt.com/blog/how-dry-should-i-be/">&lt;h2 id=&quot;the-problem&quot;&gt;The Problem&lt;&#x2F;h2&gt;
&lt;p&gt;I love writing abstractions.&lt;&#x2F;p&gt;
&lt;p&gt;It appeases my ‚Äúducks in a row‚Äù desires. It makes my code tidy and I feel like a pro calling my nifty functions.
The problem is, it doesn‚Äôt take too long before I get backed into a corner and the tidiness unravels into spaghetti.&lt;&#x2F;p&gt;
&lt;p&gt;We‚Äôve all done this.&lt;&#x2F;p&gt;
&lt;p&gt;It feels great to make magic, but magic gets messy when you need to fix it.
If you‚Äôre like me, you‚Äôll claim you‚Äôre not doing it for the magic by hiding behind the intelligent cause of staying DRY.&lt;&#x2F;p&gt;
&lt;p&gt;For the unfamiliar, DRY stands for Don‚Äôt Repeat Yourself. It‚Äôs a software development principle designed to reduce redudancy and maintainability issues.&lt;&#x2F;p&gt;
&lt;p&gt;In a nutshell:&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Productivity&lt;&#x2F;strong&gt;: Writing logic once and reusing it reduces typing.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Readability&lt;&#x2F;strong&gt;: Less code means less to read. And we read a lot more code than we write.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Maintainability&lt;&#x2F;strong&gt;: Less code to read means less to fix when things go wrong.&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;At least that‚Äôs how I understand it.&lt;&#x2F;p&gt;
&lt;p&gt;The term was first introduced in the book &lt;em&gt;The Pragmatic Programmer&lt;&#x2F;em&gt;, advocating:&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;‚ÄúEvery piece of knowledge must have a single, unambiguous, authoritative representation within a system.‚Äù&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;I don‚Äôt know how, but maybe it‚Äôs just because its so simple‚Ä¶ This is the one thing I just innately &lt;em&gt;over&lt;&#x2F;em&gt;do. When I see those capital letters online, I feel like I‚Äôm around my people. They &lt;strong&gt;get&lt;&#x2F;strong&gt; me. It resonates with the same immature hype that the minimalist movement had. Clearly important elements of truth that people have either drastically under or over-actioned with no clear markers in place to measure effectiveness.&lt;&#x2F;p&gt;
&lt;p&gt;I‚Äôm going to be honest. I have not read the book‚Ä¶ maybe my understanding of DRY is incomplete or immature, but I‚Äôm going to hazard a guess that most people who ‚Äúpractice‚Äù DRY haven‚Äôt read it either, probably not even you.&lt;&#x2F;p&gt;
&lt;p&gt;I imagine if there is ‚Äútrue‚Äù nuanced DRY, most developers aren‚Äôt familiar with it.&lt;&#x2F;p&gt;
&lt;p&gt;So here‚Äôs my hot take.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;I don‚Äôt think programmers need any encouragement to be more DRY.&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Us programmers don‚Äôt like repeating ourselves. We work out pretty early that it‚Äôs easier to use functions and variables than it is to copy and paste code all over the place like 5 year old scrap-bookers.&lt;&#x2F;p&gt;
&lt;p&gt;We want elegance and flow; we like watching code dance for us. The problem is, if we don‚Äôt control that obsession, we end up dancing for the code.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;examples&quot;&gt;Examples&lt;&#x2F;h2&gt;
&lt;p&gt;As soon as something becomes repetitive, we have the choice of leaving it in or reaching for an &lt;em&gt;abstraction&lt;&#x2F;em&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Abstraction #1: The Humble Variable.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;Python&quot; class=&quot;language-Python z-code&quot;&gt;&lt;code class=&quot;language-Python&quot; data-lang=&quot;Python&quot;&gt;&lt;span class=&quot;z-source z-python&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-python&quot;&gt;#&lt;&#x2F;span&gt; Not very DRY
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-support z-function z-builtin z-python&quot;&gt;print&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-python&quot;&gt;9&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-arithmetic z-python&quot;&gt;+&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-python&quot;&gt;10&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;log&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-accessor z-dot z-python&quot;&gt;.&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;debug&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-python&quot;&gt;9&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-arithmetic z-python&quot;&gt;+&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-python&quot;&gt;10&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-keyword z-operator z-comparison z-python&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-comparison z-python&quot;&gt;&amp;gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-python&quot;&gt;21&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;pre data-lang=&quot;Python&quot; class=&quot;language-Python z-code&quot;&gt;&lt;code class=&quot;language-Python&quot; data-lang=&quot;Python&quot;&gt;&lt;span class=&quot;z-source z-python&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-python&quot;&gt;#&lt;&#x2F;span&gt; Variables!
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;message&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-python&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-python&quot;&gt;9&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-arithmetic z-python&quot;&gt;+&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-python&quot;&gt;10&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-support z-function z-builtin z-python&quot;&gt;print&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;a&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;log&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-accessor z-dot z-python&quot;&gt;.&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;debug&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;a&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-keyword z-operator z-comparison z-python&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-comparison z-python&quot;&gt;&amp;gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-python&quot;&gt;21&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Nice. It works. But eww. If we know we want to print and log for all sorts of code throughout the project, that‚Äôs gonna get repetitive. And it‚Äôs not very future proof if we want to send that output to more ‚Äúsinks‚Äù in the future. Say I have 26 &lt;code&gt;prints&lt;&#x2F;code&gt; to stdout throughout my code. What if I now want to add the feature to send a fax every time I print? (A perfectly reasonable goal).&lt;&#x2F;p&gt;
&lt;p&gt;I would have to update the code &lt;strong&gt;26 times&lt;&#x2F;strong&gt;. DRY says no!&lt;&#x2F;p&gt;
&lt;p&gt;I guess we could use a function?&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;Python&quot; class=&quot;language-Python z-code&quot;&gt;&lt;code class=&quot;language-Python&quot; data-lang=&quot;Python&quot;&gt;&lt;span class=&quot;z-source z-python&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-function z-python&quot;&gt;&lt;span class=&quot;z-storage z-type z-function z-python&quot;&gt;&lt;span class=&quot;z-keyword z-declaration z-function z-python&quot;&gt;def&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-entity z-name z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;wuphf&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parameters z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-python&quot;&gt;&lt;span class=&quot;z-variable z-parameter z-python&quot;&gt;message&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-parameters z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-function z-begin z-python&quot;&gt;:&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-comment z-block z-documentation z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-begin z-python&quot;&gt;&amp;quot;&amp;quot;&amp;quot;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-comment z-block z-documentation z-python&quot;&gt;Notify on all the services!
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-comment z-block z-documentation z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-end z-python&quot;&gt;&amp;quot;&amp;quot;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt; &lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-support z-function z-builtin z-python&quot;&gt;print&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;message&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt; &lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;log&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-accessor z-dot z-python&quot;&gt;.&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;debug&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;message&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt; &lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;send_email&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;message&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt; &lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;tweet&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;message&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt; &lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;fax&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;message&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;wuphf&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-python&quot;&gt;9&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-arithmetic z-python&quot;&gt;+&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-python&quot;&gt;10&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-keyword z-operator z-comparison z-python&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-comparison z-python&quot;&gt;&amp;gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-python&quot;&gt;21&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;{{% videogif src=‚Äúwuphf.webm‚Äù %}}&lt;&#x2F;p&gt;
&lt;p&gt;Much better! Now my action is a single line function call that wraps five statements. I just saved myself 121 lines of code! Let the minimalist addiction kick in. Concise and maintainable.&lt;&#x2F;p&gt;
&lt;p&gt;But what if I need a little more flexibility? Maybe I don‚Äôt want to fax or tweet &lt;em&gt;every&lt;&#x2F;em&gt; time. Just most of the time. I don‚Äôt want to have to create another function called &lt;code&gt;wuphf_without_fax_and_tweet&lt;&#x2F;code&gt;. That‚Äôs clearly dumb. Let‚Äôs make our existing function more flexible.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;Python&quot; class=&quot;language-Python z-code&quot;&gt;&lt;code class=&quot;language-Python&quot; data-lang=&quot;Python&quot;&gt;&lt;span class=&quot;z-source z-python&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-function z-python&quot;&gt;&lt;span class=&quot;z-storage z-type z-function z-python&quot;&gt;&lt;span class=&quot;z-keyword z-declaration z-function z-python&quot;&gt;def&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-entity z-name z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;wuphf&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parameters z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-python&quot;&gt;&lt;span class=&quot;z-variable z-parameter z-python&quot;&gt;m&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-parameters z-python&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-parameter z-python&quot;&gt;do_print&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-default-value z-python&quot;&gt;&lt;span class=&quot;z-keyword z-operator z-assignment z-python&quot;&gt;=&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;true&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-separator z-parameters z-python&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-parameter z-python&quot;&gt;do_log&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-default-value z-python&quot;&gt;&lt;span class=&quot;z-keyword z-operator z-assignment z-python&quot;&gt;=&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;true&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-separator z-parameters z-python&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-parameter z-python&quot;&gt;do_send_email&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-default-value z-python&quot;&gt;&lt;span class=&quot;z-keyword z-operator z-assignment z-python&quot;&gt;=&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;true&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-separator z-parameters z-python&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-parameter z-python&quot;&gt;do_tweet&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-default-value z-python&quot;&gt;&lt;span class=&quot;z-keyword z-operator z-assignment z-python&quot;&gt;=&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;true&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-separator z-parameters z-python&quot;&gt;,&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-parameter z-python&quot;&gt;do_fax&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-default-value z-python&quot;&gt;&lt;span class=&quot;z-keyword z-operator z-assignment z-python&quot;&gt;=&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;true&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-parameters z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-parameters z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function z-python&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-function z-python&quot;&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-comment z-block z-documentation z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-begin z-python&quot;&gt;&amp;quot;&amp;quot;&amp;quot;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-comment z-block z-documentation z-python&quot;&gt;Now customisable!
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-comment z-block z-documentation z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-end z-python&quot;&gt;&amp;quot;&amp;quot;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt; &lt;span class=&quot;z-meta z-statement z-conditional z-if z-python&quot;&gt;&lt;span class=&quot;z-keyword z-control z-conditional z-if z-python&quot;&gt;if&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-group z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;do_print&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-block z-conditional z-if z-python&quot;&gt;:&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;  &lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-support z-function z-builtin z-python&quot;&gt;print&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;m&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt; &lt;span class=&quot;z-meta z-statement z-conditional z-if z-python&quot;&gt;&lt;span class=&quot;z-keyword z-control z-conditional z-if z-python&quot;&gt;if&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-group z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;do_log&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-block z-conditional z-if z-python&quot;&gt;:&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;  &lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;log&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-accessor z-dot z-python&quot;&gt;.&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;debug&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;m&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt; &lt;span class=&quot;z-meta z-statement z-conditional z-if z-python&quot;&gt;&lt;span class=&quot;z-keyword z-control z-conditional z-if z-python&quot;&gt;if&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-group z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;do_send_email&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;  &lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;send_email&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;m&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt; &lt;span class=&quot;z-meta z-statement z-conditional z-if z-python&quot;&gt;&lt;span class=&quot;z-keyword z-control z-conditional z-if z-python&quot;&gt;if&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-group z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;do_tweet&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;  &lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;tweet&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;m&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt; &lt;span class=&quot;z-meta z-statement z-conditional z-if z-python&quot;&gt;&lt;span class=&quot;z-keyword z-control z-conditional z-if z-python&quot;&gt;if&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-group z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;do_fax&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;  &lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;fax&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;m&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;wuphf&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-python&quot;&gt;9&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-arithmetic z-python&quot;&gt;+&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-python&quot;&gt;10&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-keyword z-operator z-comparison z-python&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-comparison z-python&quot;&gt;&amp;gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-python&quot;&gt;21&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Now I‚Äôm really solving problems. Look at all the work I‚Äôve moved into the function ready for repeat use! My function only needs one mandatory argument. That‚Äôll keep my function calls concise.&lt;&#x2F;p&gt;
&lt;p&gt;But &lt;em&gt;ahem&lt;&#x2F;em&gt; as ‚Äúuseful‚Äù as our new function is, it‚Äôs a bit wordy itself. If we write a lot of functions like this, our file might be getting pretty chunky. I don‚Äôt want to see these utility functions shadowing out the rest of the business logic, now do I??&lt;&#x2F;p&gt;
&lt;p&gt;We need to get organised.&lt;&#x2F;p&gt;
&lt;p&gt;Let‚Äôs put it in another file out of the way somewhere and import it. We‚Äôre bound to add additional functions of a similar nature, they can just live in that module too. We may as well start moving any other wordy functions to their own modules and just have a tidy-up while we‚Äôre at it.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;Python&quot; class=&quot;language-Python z-code&quot;&gt;&lt;code class=&quot;language-Python&quot; data-lang=&quot;Python&quot;&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-statement z-import z-python&quot;&gt;&lt;span class=&quot;z-keyword z-control z-import z-from z-python&quot;&gt;from&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-statement z-import z-python&quot;&gt;&lt;span class=&quot;z-meta z-import-source z-python&quot;&gt; &lt;span class=&quot;z-meta z-import-path z-python&quot;&gt;&lt;span class=&quot;z-meta z-import-name z-python&quot;&gt;notifications&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-statement z-import z-python&quot;&gt;&lt;span class=&quot;z-keyword z-control z-import z-python&quot;&gt;import&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-statement z-import z-python&quot;&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-statement z-import z-python&quot;&gt; &lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;wuphf&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;wuphf&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-python&quot;&gt;9&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-arithmetic z-python&quot;&gt;+&lt;&#x2F;span&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-python&quot;&gt;10&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-keyword z-operator z-comparison z-python&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-comparison z-python&quot;&gt;&amp;gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-python&quot;&gt;21&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Done! Easy. Works great. Rinse-and-repeat as you please and your main script is going to look so tidy üëå&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;Python&quot; class=&quot;language-Python z-code&quot;&gt;&lt;code class=&quot;language-Python&quot; data-lang=&quot;Python&quot;&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-statement z-import z-python&quot;&gt;&lt;span class=&quot;z-keyword z-control z-import z-from z-python&quot;&gt;from&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-statement z-import z-python&quot;&gt;&lt;span class=&quot;z-meta z-import-source z-python&quot;&gt; &lt;span class=&quot;z-meta z-import-path z-python&quot;&gt;&lt;span class=&quot;z-meta z-import-name z-python&quot;&gt;notifications&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-statement z-import z-python&quot;&gt;&lt;span class=&quot;z-keyword z-control z-import z-python&quot;&gt;import&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-statement z-import z-python&quot;&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-statement z-import z-python&quot;&gt; &lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;wuphf&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-statement z-import z-python&quot;&gt;&lt;span class=&quot;z-keyword z-control z-import z-from z-python&quot;&gt;from&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-statement z-import z-python&quot;&gt;&lt;span class=&quot;z-meta z-import-source z-python&quot;&gt; &lt;span class=&quot;z-meta z-import-path z-python&quot;&gt;&lt;span class=&quot;z-meta z-import-name z-python&quot;&gt;cli&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-statement z-import z-python&quot;&gt;&lt;span class=&quot;z-keyword z-control z-import z-python&quot;&gt;import&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-statement z-import z-python&quot;&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-statement z-import z-python&quot;&gt; &lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;app&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-statement z-import z-python&quot;&gt;&lt;span class=&quot;z-keyword z-control z-import z-from z-python&quot;&gt;from&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-statement z-import z-python&quot;&gt;&lt;span class=&quot;z-meta z-import-source z-python&quot;&gt; &lt;span class=&quot;z-meta z-import-path z-python&quot;&gt;&lt;span class=&quot;z-meta z-import-name z-python&quot;&gt;users&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-statement z-import z-python&quot;&gt;&lt;span class=&quot;z-keyword z-control z-import z-python&quot;&gt;import&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-statement z-import z-python&quot;&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-statement z-import z-python&quot;&gt; &lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;new_user&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-python&quot;&gt;#&lt;&#x2F;span&gt; Prompt user
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;username&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-python&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;app&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-accessor z-dot z-python&quot;&gt;.&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;get_username&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;new_user&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;username&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;&lt;span class=&quot;z-meta z-function-call z-python&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-variable z-function z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;wuphf&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-begin z-python&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-storage z-type z-string z-python&quot;&gt;f&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-string z-interpolated z-python&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-python&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-string z-interpolated z-python&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-python&quot;&gt;New user added! &amp;#39;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-interpolation z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-interpolation z-begin z-python&quot;&gt;{&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python z-embedded&quot;&gt;&lt;span class=&quot;z-meta z-qualified-name z-python&quot;&gt;&lt;span class=&quot;z-meta z-generic-name z-python&quot;&gt;username&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-interpolation z-python&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-interpolation z-end z-python&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-python&quot;&gt;&amp;#39;&lt;span class=&quot;z-punctuation z-definition z-string z-end z-python&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-arguments z-end z-python&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-python&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;it-s-a-trap&quot;&gt;It‚Äôs a Trap!&lt;&#x2F;h3&gt;
&lt;p&gt;This is obviously a silly example, but it illustrates a trap I honestly fall into:&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;I abstract for repeat use&lt;&#x2F;li&gt;
&lt;li&gt;I add more functionality to the abstraction (uh, oh, function is no longer single responsibility)&lt;&#x2F;li&gt;
&lt;li&gt;I move similar functions into a module&lt;&#x2F;li&gt;
&lt;li&gt;I need more functionality but have to dance around to implement it.&lt;&#x2F;li&gt;
&lt;li&gt;I think I‚Äôve fixed it, but one fix somewhere causes a break somewhere else since there are so many calls to my now overcomplicated, fragile function.&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;{{% videogif src=‚Äúleak.webm‚Äù%}}&lt;&#x2F;p&gt;
&lt;p&gt;If I knew I needed the flexibility of notifying to different services, I wouldn‚Äôt have done the abstraction like this to begin with. Functionality that should exist as statements in the main script now exists two layers deep.&lt;&#x2F;p&gt;
&lt;p&gt;Not that I‚Äôd wish &lt;em&gt;Notepad&lt;&#x2F;em&gt; on someone as an IDE, but‚Ä¶ good luck navigating without Intellisense.
We haven‚Äôt even touched classes.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;stuck-with-the-cheque&quot;&gt;Stuck with the Cheque&lt;&#x2F;h3&gt;
&lt;p&gt;Potential downsides of abstraction:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Complexity&lt;&#x2F;strong&gt;. Abstraction can turn simple code into a navigation nightmare. A code block becomes a function, then a file, then a module. Code functionality can become hidden deep in the codebase.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Brittle&lt;&#x2F;strong&gt;. Abstractions can create unnecessary hoops to jump through in order to anticipate future needs that may never materialise. These hoops constrain the way we write code that interfaces with it. If the code that needs it can‚Äôt change, we end up having to change the abstraction and potentially any other code that‚Äôs already used it.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Maintainability&lt;&#x2F;strong&gt;. Code that‚Äôs complex and brittle is already hard to work with. What about anyone in the future who has to work on that code? Can they learn it quickly? What about yourself in a weeks time?&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Premature abstraction is basically blind refactoring. We don‚Äôt want to refactor later when we have the facts, let‚Äôs refactor now without them!&lt;&#x2F;p&gt;
&lt;h2 id=&quot;mitigation&quot;&gt;Mitigation&lt;&#x2F;h2&gt;
&lt;p&gt;Alright, so too much DRY can lead to brittle abstractions. How do we find a good balance?
Well, being aware is a good first step. Hopefully, you can analyse your own dev journey and see where you lie on that spectrum.
You might be doing great and this is all for someone else.&lt;&#x2F;p&gt;
&lt;p&gt;But if this is for you, read on. Here‚Äôs a few things that have helped me.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;consider-abstraction-usefulness&quot;&gt;Consider Abstraction Usefulness&lt;&#x2F;h3&gt;
&lt;p&gt;Be honest with yourself. Ask yourself these questions before you get your hands dirty:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;How likely are you to need this later?&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Is there something more generic that does the job?&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;If so, exhaust those options before rolling your own!&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;How nested is your code?&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;What do you gain in making a code block a function?&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;What do you gain in moving a set of functions into a class?&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;What do you gain in moving a set of functions&#x2F;classes to a separate file (module, script, etc.)?&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;file-length&quot;&gt;File Length&lt;&#x2F;h3&gt;
&lt;p&gt;Is your file getting too long?
Are you tired of scrolling up and down so much?&lt;&#x2F;p&gt;
&lt;p&gt;To be honest, it probably isn‚Äôt too long.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Are you using &lt;a href=&quot;https:&#x2F;&#x2F;code.visualstudio.com&#x2F;docs&#x2F;editor&#x2F;codebasics#_folding&quot;&gt;code folding shortcuts&lt;&#x2F;a&gt; effectively?
You can collapse by different levels of indentation. E.g. If you have a set of test functions defined at one indentation level in, you can fold all the function definitions into their titles with &lt;code&gt;ctrl&#x2F;cmd + k, ctrl&#x2F;cmd 1&lt;&#x2F;code&gt;. Each indentation level deeper is a higher number.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Are you using &lt;a href=&quot;https:&#x2F;&#x2F;code.visualstudio.com&#x2F;docs&#x2F;editor&#x2F;editingevolved#_peek&quot;&gt;‚ÄúPeek‚Äù&lt;&#x2F;a&gt;?
VS Code has an option to jump to function definitions from references to a function elsewhere (Go to Definition). It also allows the inverse, listing references from the definition itself (Go to References). Use &lt;code&gt;ctrl&#x2F;cmd + left click&lt;&#x2F;code&gt; or &lt;code&gt;shift + F12&lt;&#x2F;code&gt; and &lt;code&gt;option + F12&lt;&#x2F;code&gt; respectively. Using Peek to perform these navigations gives you a little window to work with, so you can update a reference (or several) and not have the mental overhead of finding you way back to deal with.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Are you using &lt;a href=&quot;https:&#x2F;&#x2F;stackoverflow.com&#x2F;questions&#x2F;35424367&#x2F;how-can-i-navigate-back-to-the-last-cursor-position-in-visual-studio-code&quot;&gt;cursor history navigation&lt;&#x2F;a&gt;?
VS Code has a ‚ÄúGo forward‚Äù and ‚ÄúGo back‚Äù functionality for the cursor. If the Peek window isn‚Äôt enough and you just need more visual context, or hindsight is 20&#x2F;20 and you need to go back somewhere that wasn‚Äôt a linked function definition&#x2F;reference, you can navigate to where your cursor was last and back again.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Are you using &lt;a href=&quot;https:&#x2F;&#x2F;code.visualstudio.com&#x2F;docs&#x2F;editor&#x2F;editingevolved#_rename-symbol&quot;&gt;‚ÄúRename Symbol‚Äù&lt;&#x2F;a&gt;?
This one‚Äôs a stretch, but if you find the possibility of similar names causing rename conflict has you wanting to split your file, consider using Rename Symbol. If you need to change the name of a function or variable &lt;em&gt;everywhere&lt;&#x2F;em&gt; you might not want to change every instance of the word too. Say you have a function named, ‚Äúfile‚Äù, but you realise a little late that &lt;code&gt;file&lt;&#x2F;code&gt; is actually a built-in variable in your language that shouldn‚Äôt be overriden. If you run ‚Äúfind and replace‚Äù, every instance of that word will change, including instances of that built-in variable and any time you used the word ‚Äúfile‚Äù in inline comments or as part of a name in any other variables, function calls or methods, etc. Using Rename Symbol ensures you don‚Äôt mess with that other stuff.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Learning how to navigate in your IDE efficiently will help prevent you from segregating your code out of navigation frustration. When you think you‚Äôve maxed out your ability to grasp navigation tools, if it feels like there‚Äôs too much going on in a file, then consider moving stuff.&lt;&#x2F;p&gt;
&lt;p&gt;If after some time you can see sections that have discrete responsibilities that you have not edited in a while, you can try moving them, but consider what you will lose and what you will gain carefully!&lt;&#x2F;p&gt;
&lt;p&gt;There‚Äôs plenty more to consider. Use the IDE‚Äôs outline, breadcrumbs, etc.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;code-complexity&quot;&gt;Code Complexity&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;jellyfish.co&#x2F;library&#x2F;cyclomatic-complexity&#x2F;&quot;&gt;Cyclomatic complexity&lt;&#x2F;a&gt; is a metric that measures the complexity of a program by counting the number of linearly independent paths through a program‚Äôs source code.&lt;&#x2F;p&gt;
&lt;p&gt;Essentially, it‚Äôll help you keep yourself honest with stats that tell you when you‚Äôre a bad boy. Too many nested if statements in a single function, that sort of thing. It won‚Äôt help you with &lt;a href=&quot;https:&#x2F;&#x2F;www.geeksforgeeks.org&#x2F;separation-of-concerns-soc&#x2F;&quot;&gt;Separation of Concerns&lt;&#x2F;a&gt; (&lt;a href=&quot;https:&#x2F;&#x2F;grugbrain.dev&#x2F;#grug-on-soc&quot;&gt;if that‚Äôs a principle you follow&lt;&#x2F;a&gt;), but it will help you with keeping complexity low. Unnecessary complexity is what makes a brittle abstraction.&lt;&#x2F;p&gt;
&lt;p&gt;If you‚Äôre using Python, consider using &lt;a href=&quot;https:&#x2F;&#x2F;docs.astral.sh&#x2F;ruff&#x2F;configuration&#x2F;&quot;&gt;Ruff as your linter&lt;&#x2F;a&gt; (and formatter). It enables McCabe‚Äôs complexity rule for linting by default (c901). It‚Äôs written in Rust, is very fast and includes support for a lot of linting rules.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;snippets&quot;&gt;Snippets&lt;&#x2F;h3&gt;
&lt;p&gt;Snippets are blocks of text that you can inject at your cursor.
If we‚Äôre talking code, snippets are a great way to inject common code patterns.
They offer a template for a common pattern, like looping or conditional statements.&lt;&#x2F;p&gt;
&lt;p&gt;I‚Äôve never much used snippets until recently.&lt;&#x2F;p&gt;
&lt;p&gt;I‚Äôve had to push through some mental friction in using them.
Part of me feels if I use snippets, I‚Äôll forget how to write the code patterns they inject.
It‚Äôs like trading memory-space; if I need to remember the name of a snippet and a keyboard shortcut for it, I‚Äôm going to forget the code pattern.&lt;&#x2F;p&gt;
&lt;p&gt;Fortunately, this isn‚Äôt true. How you get your code into the IDE matters a lot less than understanding what it does.
Sometimes, I find myself staring at the flashing cursor with 10 different for-loop implementations fighting for my attention.
Snippets help take this load off a bit.&lt;&#x2F;p&gt;
&lt;p&gt;Visual Studo Code has a built-in snippet feature that you can use to create snippets.
There are also a heap of snippets published on the VSCode marketplace as extensions.
When you insert a snippet in VSCode, you can tab through the required variables to quickly fill them out.&lt;&#x2F;p&gt;
&lt;p&gt;Other IDEs have similar implementations.&lt;&#x2F;p&gt;
&lt;p&gt;if you find youself needing snippets across IDEs, code editors in browsers or quickly in a terminal, consider using &lt;a href=&quot;https:&#x2F;&#x2F;www.raycast.com&quot;&gt;RayCast&lt;&#x2F;a&gt; if you‚Äôre on a Mac ‚Äì for a bunch of reasons, snippets being one. Raycast allows snippet injection globally, anywhere you can type. It also includes support for dynamic placeholders (variables).
It goes beyond code. It‚Äôs handy for templating emails, Zendesk tickets, whatever you can think of.&lt;&#x2F;p&gt;
&lt;p&gt;I‚Äôve also used &lt;a href=&quot;https:&#x2F;&#x2F;espanso.org&#x2F;install&#x2F;&quot;&gt;Espanso&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;www.keyboardmaestro.com&#x2F;main&#x2F;&quot;&gt;KeyboardMaestro&lt;&#x2F;a&gt;, and &lt;a href=&quot;https:&#x2F;&#x2F;www.autohotkey.com&quot;&gt;AutoHotkey&lt;&#x2F;a&gt; on Windows.
They all have their own unique features, but support snippets at a minimum.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;ai-assistance&quot;&gt;AI Assistance&lt;&#x2F;h3&gt;
&lt;p&gt;AI Autocomplete is different. It often completes what I‚Äôm going to type and of course, I get to accept or deny the suggestion.
This is one less cognitive hurdle compared to snippets, I‚Äôm not trading any mental real-estate to remember a trigger.
It comes with the huge added benefit of being intelligent:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;You don‚Äôt need to add any snippets manually&lt;&#x2F;li&gt;
&lt;li&gt;Completions are fully dynamic, using the context of your file, repo or even whole codebase&lt;&#x2F;li&gt;
&lt;li&gt;Cycle through multiple suggestions if the first one doesn‚Äôt work&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;I‚Äôve been using Sourcegraph‚Äôs Cody as an alternative to the non-free Github Copilot.
I did some work on a frontend with react-form-json-schema and PowerShell as a backend (WILD stuff ‚Äì see the amazing &lt;a href=&quot;https:&#x2F;&#x2F;docs.powershelluniversal.com&quot;&gt;Powershell Universal&lt;&#x2F;a&gt; platform). Because the LLM was familiar with the larger react-form-json-schema project, it had no trouble translating that into my niche PowerShell codebase. All the form validation is in native PowerShell with very consistent &lt;code&gt;Test&lt;&#x2F;code&gt; functions for each field:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;PowerShell&quot; class=&quot;language-PowerShell z-code&quot;&gt;&lt;code class=&quot;language-PowerShell&quot; data-lang=&quot;PowerShell&quot;&gt;&lt;span class=&quot;z-source z-powershell&quot;&gt;&lt;span class=&quot;z-meta z-function z-powershell&quot;&gt;&lt;span class=&quot;z-storage z-type z-powershell&quot;&gt;function&lt;&#x2F;span&gt; &lt;span class=&quot;z-entity z-name z-function z-powershell&quot;&gt;Test-RequesterEmail&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-scriptblock z-powershell&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-braces z-begin z-powershell&quot;&gt;{&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-powershell&quot;&gt;&lt;span class=&quot;z-meta z-scriptblock z-powershell&quot;&gt;    &lt;span class=&quot;z-keyword z-control z-powershell&quot;&gt;param&lt;&#x2F;span&gt; &lt;span class=&quot;z-punctuation z-section z-group z-begin z-powershell&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-interpolated z-simple z-source z-powershell&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-powershell&quot;&gt;&lt;span class=&quot;z-meta z-scriptblock z-powershell&quot;&gt;&lt;span class=&quot;z-interpolated z-simple z-source z-powershell&quot;&gt;        &lt;span class=&quot;z-meta z-attribute z-powershell&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-bracket z-begin z-powershell&quot;&gt;[&lt;&#x2F;span&gt;&lt;span class=&quot;z-support z-function z-attribute z-powershell&quot;&gt;Parameter&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-powershell&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-parameter z-attribute z-powershell&quot;&gt;mandatory&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-powershell&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-language z-powershell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-powershell&quot;&gt;$&lt;&#x2F;span&gt;True&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-powershell&quot;&gt;)&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-bracket z-end z-powershell&quot;&gt;]&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-powershell&quot;&gt;&lt;span class=&quot;z-meta z-scriptblock z-powershell&quot;&gt;&lt;span class=&quot;z-interpolated z-simple z-source z-powershell&quot;&gt;        &lt;span class=&quot;z-punctuation z-section z-bracket z-begin z-powershell&quot;&gt;[&lt;&#x2F;span&gt;&lt;span class=&quot;z-storage z-type z-powershell&quot;&gt;String&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-bracket z-end z-powershell&quot;&gt;]&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-other z-readwrite z-powershell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-powershell&quot;&gt;$&lt;&#x2F;span&gt;RequesterEmail&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-powershell&quot;&gt;&lt;span class=&quot;z-meta z-scriptblock z-powershell&quot;&gt;&lt;span class=&quot;z-interpolated z-simple z-source z-powershell&quot;&gt;    &lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-powershell&quot;&gt;)&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-powershell&quot;&gt;&lt;span class=&quot;z-meta z-scriptblock z-powershell&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-powershell&quot;&gt;&lt;span class=&quot;z-meta z-scriptblock z-powershell&quot;&gt;    &lt;span class=&quot;z-comment z-line z-powershell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-powershell&quot;&gt;#&lt;&#x2F;span&gt; Get AD user&lt;span class=&quot;z-punctuation z-definition z-comment z-powershell&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-powershell&quot;&gt;&lt;span class=&quot;z-meta z-scriptblock z-powershell&quot;&gt;    &lt;span class=&quot;z-variable z-other z-readwrite z-powershell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-powershell&quot;&gt;$&lt;&#x2F;span&gt;User&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-powershell&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-support z-function z-powershell&quot;&gt;Get-ADUser&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-powershell&quot;&gt;-&lt;&#x2F;span&gt;Filter &lt;span class=&quot;z-meta z-scriptblock z-powershell&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-braces z-begin z-powershell&quot;&gt;{&lt;&#x2F;span&gt;EmailAddress &lt;span class=&quot;z-keyword z-operator z-comparison z-powershell&quot;&gt;-eq&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-readwrite z-powershell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-powershell&quot;&gt;$&lt;&#x2F;span&gt;RequesterEmail&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-braces z-end z-powershell&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-powershell&quot;&gt;-&lt;&#x2F;span&gt;Properties EmailAddress&lt;span class=&quot;z-keyword z-operator z-other z-powershell&quot;&gt;,&lt;&#x2F;span&gt; DistinguishedName
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-powershell&quot;&gt;&lt;span class=&quot;z-meta z-scriptblock z-powershell&quot;&gt;    &lt;span class=&quot;z-support z-function z-powershell&quot;&gt;Write-Host&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-double z-powershell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-powershell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;DEBUG: AD User info: &lt;span class=&quot;z-variable z-other z-readwrite z-powershell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-powershell&quot;&gt;$&lt;&#x2F;span&gt;User&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-end z-powershell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-powershell&quot;&gt;&lt;span class=&quot;z-meta z-scriptblock z-powershell&quot;&gt;    
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-powershell&quot;&gt;&lt;span class=&quot;z-meta z-scriptblock z-powershell&quot;&gt;    &lt;span class=&quot;z-comment z-line z-powershell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-powershell&quot;&gt;#&lt;&#x2F;span&gt; Test domain address&lt;span class=&quot;z-punctuation z-definition z-comment z-powershell&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-powershell&quot;&gt;&lt;span class=&quot;z-meta z-scriptblock z-powershell&quot;&gt;    &lt;span class=&quot;z-keyword z-control z-powershell&quot;&gt;If&lt;&#x2F;span&gt; &lt;span class=&quot;z-punctuation z-section z-group z-begin z-powershell&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-interpolated z-simple z-source z-powershell&quot;&gt;&lt;span class=&quot;z-keyword z-operator z-logical z-powershell&quot;&gt;-not&lt;&#x2F;span&gt; &lt;span class=&quot;z-variable z-other z-readwrite z-powershell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-powershell&quot;&gt;$&lt;&#x2F;span&gt;User&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-powershell&quot;&gt;)&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-scriptblock z-powershell&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-braces z-begin z-powershell&quot;&gt;{&lt;&#x2F;span&gt; 
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-powershell&quot;&gt;&lt;span class=&quot;z-meta z-scriptblock z-powershell&quot;&gt;&lt;span class=&quot;z-meta z-scriptblock z-powershell&quot;&gt;        &lt;span class=&quot;z-support z-function z-powershell&quot;&gt;Write-Host&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-double z-powershell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-powershell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;ERROR: Invalid! User &amp;#39;&lt;span class=&quot;z-punctuation z-definition z-variable z-powershell&quot;&gt;$&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-powershell&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-interpolated z-complex z-source z-powershell&quot;&gt;&lt;span class=&quot;z-variable z-other z-readwrite z-powershell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-powershell&quot;&gt;$&lt;&#x2F;span&gt;RequesterEmail&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-powershell&quot;&gt;)&lt;&#x2F;span&gt;&amp;#39; not registered in Active Directory.&lt;span class=&quot;z-punctuation z-definition z-string z-end z-powershell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-powershell&quot;&gt;&lt;span class=&quot;z-meta z-scriptblock z-powershell&quot;&gt;&lt;span class=&quot;z-meta z-scriptblock z-powershell&quot;&gt;        &lt;span class=&quot;z-keyword z-control z-powershell&quot;&gt;return&lt;&#x2F;span&gt; &lt;span class=&quot;z-support z-function z-powershell&quot;&gt;New-ValidationResult&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-powershell&quot;&gt;-&lt;&#x2F;span&gt;Name &lt;span class=&quot;z-string z-quoted z-double z-powershell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-powershell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;Requester Email&lt;span class=&quot;z-punctuation z-definition z-string z-end z-powershell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-powershell&quot;&gt;-&lt;&#x2F;span&gt;Status &lt;span class=&quot;z-constant z-language z-powershell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-powershell&quot;&gt;$&lt;&#x2F;span&gt;False&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-powershell&quot;&gt;-&lt;&#x2F;span&gt;Message &lt;span class=&quot;z-string z-quoted z-double z-powershell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-powershell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&amp;#39;&lt;span class=&quot;z-variable z-other z-readwrite z-powershell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-powershell&quot;&gt;$&lt;&#x2F;span&gt;RequesterEmail&lt;&#x2F;span&gt;&amp;#39; is not a valid XCompany email address.&lt;span class=&quot;z-punctuation z-definition z-string z-end z-powershell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-powershell&quot;&gt;&lt;span class=&quot;z-meta z-scriptblock z-powershell&quot;&gt;&lt;span class=&quot;z-meta z-scriptblock z-powershell&quot;&gt;    &lt;span class=&quot;z-punctuation z-section z-braces z-end z-powershell&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-powershell&quot;&gt;&lt;span class=&quot;z-meta z-scriptblock z-powershell&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-powershell&quot;&gt;&lt;span class=&quot;z-meta z-scriptblock z-powershell&quot;&gt;    &lt;span class=&quot;z-comment z-line z-powershell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-powershell&quot;&gt;#&lt;&#x2F;span&gt; Test staff address&lt;span class=&quot;z-punctuation z-definition z-comment z-powershell&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-powershell&quot;&gt;&lt;span class=&quot;z-meta z-scriptblock z-powershell&quot;&gt;    &lt;span class=&quot;z-keyword z-control z-powershell&quot;&gt;If&lt;&#x2F;span&gt; &lt;span class=&quot;z-punctuation z-section z-group z-begin z-powershell&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-interpolated z-simple z-source z-powershell&quot;&gt;&lt;span class=&quot;z-keyword z-operator z-logical z-powershell&quot;&gt;-not&lt;&#x2F;span&gt; &lt;span class=&quot;z-punctuation z-section z-group z-begin z-powershell&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-interpolated z-simple z-source z-powershell&quot;&gt;&lt;span class=&quot;z-variable z-other z-readwrite z-powershell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-powershell&quot;&gt;$&lt;&#x2F;span&gt;User&lt;span class=&quot;z-variable z-other z-member z-powershell&quot;&gt;.DistinguishedName&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-comparison z-powershell&quot;&gt;-match&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-double z-powershell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-powershell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;OU=XCompany Staff&lt;span class=&quot;z-punctuation z-definition z-string z-end z-powershell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-powershell&quot;&gt;)&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-powershell&quot;&gt;)&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-scriptblock z-powershell&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-braces z-begin z-powershell&quot;&gt;{&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-powershell&quot;&gt;&lt;span class=&quot;z-meta z-scriptblock z-powershell&quot;&gt;&lt;span class=&quot;z-meta z-scriptblock z-powershell&quot;&gt;        &lt;span class=&quot;z-support z-function z-powershell&quot;&gt;Write-Host&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-double z-powershell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-powershell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;ERROR: Invalid! User &amp;#39;&lt;span class=&quot;z-punctuation z-definition z-variable z-powershell&quot;&gt;$&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-begin z-powershell&quot;&gt;(&lt;&#x2F;span&gt;&lt;span class=&quot;z-interpolated z-complex z-source z-powershell&quot;&gt;&lt;span class=&quot;z-variable z-other z-readwrite z-powershell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-powershell&quot;&gt;$&lt;&#x2F;span&gt;RequesterEmail&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-section z-group z-end z-powershell&quot;&gt;)&lt;&#x2F;span&gt;&amp;#39; is not in &lt;span class=&quot;z-constant z-character z-escape z-powershell&quot;&gt;&amp;quot;&amp;quot;&lt;&#x2F;span&gt;Staff&lt;span class=&quot;z-constant z-character z-escape z-powershell&quot;&gt;&amp;quot;&amp;quot;&lt;&#x2F;span&gt; OU.&lt;span class=&quot;z-punctuation z-definition z-string z-end z-powershell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-powershell&quot;&gt;&lt;span class=&quot;z-meta z-scriptblock z-powershell&quot;&gt;&lt;span class=&quot;z-meta z-scriptblock z-powershell&quot;&gt;        &lt;span class=&quot;z-keyword z-control z-powershell&quot;&gt;return&lt;&#x2F;span&gt; &lt;span class=&quot;z-support z-function z-powershell&quot;&gt;New-ValidationResult&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-powershell&quot;&gt;-&lt;&#x2F;span&gt;Name &lt;span class=&quot;z-string z-quoted z-double z-powershell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-powershell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;Requester Email&lt;span class=&quot;z-punctuation z-definition z-string z-end z-powershell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-powershell&quot;&gt;-&lt;&#x2F;span&gt;Status &lt;span class=&quot;z-constant z-language z-powershell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-powershell&quot;&gt;$&lt;&#x2F;span&gt;False&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-powershell&quot;&gt;-&lt;&#x2F;span&gt;Message &lt;span class=&quot;z-string z-quoted z-double z-powershell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-powershell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&amp;#39;&lt;span class=&quot;z-variable z-other z-readwrite z-powershell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-powershell&quot;&gt;$&lt;&#x2F;span&gt;RequesterEmail&lt;&#x2F;span&gt;&amp;#39; is not a valid staff email address.&lt;span class=&quot;z-punctuation z-definition z-string z-end z-powershell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-powershell&quot;&gt;&lt;span class=&quot;z-meta z-scriptblock z-powershell&quot;&gt;&lt;span class=&quot;z-meta z-scriptblock z-powershell&quot;&gt;    &lt;span class=&quot;z-punctuation z-section z-braces z-end z-powershell&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-powershell&quot;&gt;&lt;span class=&quot;z-meta z-scriptblock z-powershell&quot;&gt;    &lt;span class=&quot;z-keyword z-control z-powershell&quot;&gt;return&lt;&#x2F;span&gt; &lt;span class=&quot;z-support z-function z-powershell&quot;&gt;New-ValidationResult&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-powershell&quot;&gt;-&lt;&#x2F;span&gt;Name &lt;span class=&quot;z-string z-quoted z-double z-powershell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-powershell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;Requester Email&lt;span class=&quot;z-punctuation z-definition z-string z-end z-powershell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-powershell&quot;&gt;-&lt;&#x2F;span&gt;Status &lt;span class=&quot;z-constant z-language z-powershell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-powershell&quot;&gt;$&lt;&#x2F;span&gt;True&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-powershell&quot;&gt;-&lt;&#x2F;span&gt;Message &lt;span class=&quot;z-string z-quoted z-double z-powershell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-powershell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&amp;#39;&lt;span class=&quot;z-variable z-other z-readwrite z-powershell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-powershell&quot;&gt;$&lt;&#x2F;span&gt;RequesterEmail&lt;&#x2F;span&gt;&amp;#39; is a valid XCompany staff email address.&lt;span class=&quot;z-punctuation z-definition z-string z-end z-powershell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-powershell&quot;&gt;&lt;span class=&quot;z-meta z-scriptblock z-powershell&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-braces z-end z-powershell&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;After writing a couple of these validation functions, Cody pretty much did the rest. All my fields were defined in the schema. Cody pre-empted each line I needed. Even the comments.
It even replicated my weird &lt;code&gt;Write-Host&lt;&#x2F;code&gt; stuff with ‚ÄúERROR‚Äù and ‚ÄúINFO‚Äù prefixes (PU sends &lt;code&gt;Write-Host&lt;&#x2F;code&gt; to the browser console, but not &lt;code&gt;Write-Debug&#x2F;Info&#x2F;Error&lt;&#x2F;code&gt;).&lt;&#x2F;p&gt;
&lt;p&gt;If your code is predictable enough, you may find AI autocomplete does a fine job of anticipating your structure. This in a way is a good marker of your consistency as a programmer. If you find it anticipating your code well, you might find that the mental strain of yourself anticipating your code is also lowered.&lt;&#x2F;p&gt;
&lt;p&gt;AI isn‚Äôt always going to have the completions you want, but it is a step up from snippets for cutting through the tedium.
Just be aware that when you don‚Äôt want a suggestion it can be a bit of a nuisance and suggest a completiion if you pause for too long.
In my opinion, this is more annoying than you‚Äôd think. If you struggle with maintaining a train-of-thought, unwanted completions will derail you quicker.&lt;&#x2F;p&gt;
&lt;p&gt;Regarding DRY itself, if you find a block of code you think could be more concise, ask Cody to rewrite it. See what it suggests.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;ai-prompting&quot;&gt;AI prompting&lt;&#x2F;h2&gt;
&lt;p&gt;We‚Äôre all familiar with ChatGPT by now.&lt;&#x2F;p&gt;
&lt;p&gt;The most recent model GPT-4O has really impressed me. I‚Äôve received some great working code examples from it that just worked out-of-the-box. The Powershell Universal project above, it‚Äôs all in one file, 400 lines of code. I pasted that into ChatGPT and asked for a few changes and it sent it right back, changes applied. It actually became more convenient to ask for changes I knew how to make directly within ChatGPT itself. By the time I could make the necessary modifications to the &lt;code&gt;FormSchema&lt;&#x2F;code&gt;, &lt;code&gt;UISchema&lt;&#x2F;code&gt; and ‚ÄúTest‚Äù functions myself, ChatGPT would‚Äôve finished writing the whole script out again from scratch.&lt;&#x2F;p&gt;
&lt;p&gt;I‚Äôm excited to see more convenient coding workflows pop up.&lt;&#x2F;p&gt;
&lt;p&gt;Consider &lt;a href=&quot;https:&#x2F;&#x2F;sourcegraph.com&#x2F;cody&quot;&gt;Cody&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;chatgpt.com&quot;&gt;ChatGPT&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;features&#x2F;copilot&quot;&gt;GitHub Copilot&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;groq.com&quot;&gt;Groq&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;ollama.com&quot;&gt;Ollama&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;charmbracelet&#x2F;mods&quot;&gt;Mods&lt;&#x2F;a&gt; to name a few AI tools‚Ä¶ and &lt;a href=&quot;https:&#x2F;&#x2F;www.trycursor.com&quot;&gt;Cursor&lt;&#x2F;a&gt;, for an AI first IDE. This seems to be getting better by the day.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;environments&quot;&gt;Environments&lt;&#x2F;h3&gt;
&lt;p&gt;Consider your production and development environments. How will it deal with your abstractions? Is it going to play with a modular codebase nicely?
Environments can be the difference between a project building successfully or not. If manual changes to the code are required to deploy in common environments, merging upstream changes from git gets messy. This is not a fun experience for your users.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Portainer has a great GitOps style integration for its Stacks feature. It works great with a &lt;code&gt;docker-compose.yaml&lt;&#x2F;code&gt; and &lt;code&gt;.env&lt;&#x2F;code&gt;, but it won‚Äôt easily handle sidecar yaml configs or a &lt;code&gt;docker-compose.override.yaml&lt;&#x2F;code&gt;. Does the configuration need to be abstracted into multiple files?&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Powershell Universal has an internal repo that is not designed for manual updates because of the way file-watching works to reload downstream services. Creating and importing modules can get a bit prickly without proper planning.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Application hosting services like Fly.io expect a certain file structure. Keeping your code in line with recommendations might be important to prevent refactoring later.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Can your planned abstractions be used later in this codebase? How about in future projects?&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Can you release code in a way to make abstractions more compatible?&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;frameworks-libraries-and-other-dependencies&quot;&gt;Frameworks, Libraries and other Dependencies&lt;&#x2F;h3&gt;
&lt;p&gt;This one takes good judgement. Both of the follwing statements are true:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;The &lt;strong&gt;best&lt;&#x2F;strong&gt; kind of abstractions to work with are ones you didn‚Äôt write&lt;&#x2F;li&gt;
&lt;li&gt;The &lt;strong&gt;worst&lt;&#x2F;strong&gt; kind of abstractions to work with are ones you didn‚Äôt write&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Provided you are careful about the dependencies you choose, you can find yourself with a featureful set of abstractions that are well scoped, well planned, maintained, secure, rarely include breaking changes and have a healthy community happy to support.&lt;&#x2F;p&gt;
&lt;p&gt;Nothing lasts forever, but good dependencies should outlast your own projects.
When choosing dependencies, check:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;It doesn‚Äôt do too much.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Depedencies that do too much become a greater risk to your code if they become unmaintained.&lt;&#x2F;li&gt;
&lt;li&gt;Poor scoping may also be indicative of poor planning and more difficult maintenance.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Maintainer engagement.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Are issues responded to in a timely manner?&lt;&#x2F;li&gt;
&lt;li&gt;Are pull requests reviewed?&lt;&#x2F;li&gt;
&lt;li&gt;Are new features added?&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;It has a healthy community.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Are users asking questions and getting answers from the community?&lt;&#x2F;li&gt;
&lt;li&gt;Is there a dedicated place for discussion?&lt;&#x2F;li&gt;
&lt;li&gt;Is the community engaged with the direction of the project?&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;It‚Äôs mature.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Does it use semantic versioning?&lt;&#x2F;li&gt;
&lt;li&gt;Are they in Alpha&#x2F;Beta or Release Candidate stages?&lt;&#x2F;li&gt;
&lt;li&gt;Have they released a 1.0.0 version yet?&lt;&#x2F;li&gt;
&lt;li&gt;Is the project prone to breaking changes?&lt;&#x2F;li&gt;
&lt;li&gt;Linters? Formatters? CI&#x2F;CD workflows?&lt;&#x2F;li&gt;
&lt;li&gt;What sort of tooling is used for development?&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Documentation.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Is the code well documented?&lt;&#x2F;li&gt;
&lt;li&gt;Is the code well commented?&lt;&#x2F;li&gt;
&lt;li&gt;Is there lag between the main branch and docs?&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Source Code.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Is the code well structured?&lt;&#x2F;li&gt;
&lt;li&gt;Do you understand it?&lt;&#x2F;li&gt;
&lt;li&gt;Could you confidently make contributions to it if you needed to?&lt;&#x2F;li&gt;
&lt;li&gt;How much code is there?&lt;&#x2F;li&gt;
&lt;li&gt;How abstract is it? üòè&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Rolling-your-own has maintainability implications, but at the end of the day, it‚Äôs code you wrote and understand.
Vulnerabilities in that code won‚Äôt go away unless you fix them, but you‚Äôll be safe from &lt;a href=&quot;https:&#x2F;&#x2F;attack.mitre.org&#x2F;techniques&#x2F;T1195&#x2F;&quot;&gt;supply chain attacks&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Dependencies come with whatever their maintainers decide to put in their code. A healthy open-source community may detect and mitigate security vulnerabilities, fix bugs, add docs and maybe even introduce new features. An unhealthy community can lead to stagnant, vulnerable, out-of-date code that may even stop working with other dependencies or language versions.&lt;&#x2F;p&gt;
&lt;p&gt;Choose wisely!&lt;&#x2F;p&gt;
</description>
      </item>
      <item>
          <title>Getting Good</title>
          <pubDate>Sun, 16 Jun 2024 00:00:00 +0000</pubDate>
          <author>Caleb Trevatt</author>
          <link>https://calebtrevatt.com/blog/getting-good/</link>
          <guid>https://calebtrevatt.com/blog/getting-good/</guid>
          <description xml:base="https://calebtrevatt.com/blog/getting-good/">&lt;h2 id=&quot;handling-weakness&quot;&gt;Handling Weakness&lt;&#x2F;h2&gt;
&lt;p&gt;When it comes to programming, I‚Äôm very visually orientated. I struggle to grasp theoretical concepts that don‚Äôt have physical real-world analogues.&lt;&#x2F;p&gt;
&lt;p&gt;Yeah. I love analogies. Too much.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Functional programming.&lt;&#x2F;strong&gt; I struggle to visualise it. I love its elegance (when it works), but I am &lt;em&gt;so&lt;&#x2F;em&gt; unproductive in it. I know it has a steep learning curve, but I‚Äôm not joking. I don‚Äôt think I‚Äôm smart enough to use it efficiently, at least not in a professional capacity.&lt;&#x2F;p&gt;
&lt;p&gt;You can add to that list:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Kubernetes&lt;&#x2F;li&gt;
&lt;li&gt;Authentication&lt;&#x2F;li&gt;
&lt;li&gt;Cryptography&lt;&#x2F;li&gt;
&lt;li&gt;Probably 90% of networking&lt;&#x2F;li&gt;
&lt;li&gt;Cloud architecture&lt;&#x2F;li&gt;
&lt;li&gt;ML dev&lt;&#x2F;li&gt;
&lt;li&gt;UI&#x2F;UX&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;calebtrevatt.com&#x2F;blog&#x2F;getting-good&#x2F;my-brain.jpg&quot; alt=&quot;It‚Äôs a little too realistic‚Ä¶&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;healthy-constraints&quot;&gt;Healthy Constraints&lt;&#x2F;h2&gt;
&lt;p&gt;Largely, I‚Äôve been able to look at those things and go, ‚ÄúIt‚Äôs okay. I probably didn‚Äôt want to be a network administrator anyway‚Äù. There is a blessing in constraints; if the road is as wide as it is long, we wouldn‚Äôt know which direction to go.&lt;&#x2F;p&gt;
&lt;p&gt;Some of that other stuff is harder to look past. ‚ÄúHow am I gonna be a decent software developer if I can‚Äôt make a decent UI?‚Äù and I get really caught up on it.&lt;&#x2F;p&gt;
&lt;p&gt;It would have been fine for Batman to go to a zoo and look a bat in the eye a few times a week, maybe pet one, and call his phobia dealt with. But he took it too far and became a bat-themed vigilante. But I love that. I want to be like Batman and turn my weaknesses into strengths, face my fears and GET GOOD.&lt;&#x2F;p&gt;
&lt;p&gt;Like Batman, I‚Äôve gone down the rabbit-hole on my weaknesses.&lt;&#x2F;p&gt;
&lt;p&gt;Unlike Batman, I haven‚Äôt been as successful.&lt;&#x2F;p&gt;
&lt;p&gt;I don‚Äôt want to just be okay at frontend dev, I want it to become a strength. So I muster inspiration, it becomes the focus, I form unrealistic expectations about my progress and I lose inspiration. Rinse and repeat.&lt;&#x2F;p&gt;
&lt;p&gt;Instead I should let these weaknesses constrain me and redirect me in my strengths to where I &lt;em&gt;can&lt;&#x2F;em&gt; progress. Like gutter guards when bowling; feel the feedback, bounce back, and keep moving forwards. Let your weaknesses provide you with &lt;strong&gt;focus&lt;&#x2F;strong&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;when-to-push&quot;&gt;When to Push&lt;&#x2F;h2&gt;
&lt;p&gt;That isn‚Äôt to say you should never front up any weakness.
You need to use good judgement.&lt;&#x2F;p&gt;
&lt;p&gt;Say you suck at cloud architecture.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;How did you get here? Is it relevant?&lt;&#x2F;li&gt;
&lt;li&gt;Can your goals be met another way?&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;If not‚Ä¶&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;What do you lack that has produced this weakness?&lt;&#x2F;li&gt;
&lt;li&gt;Is it just experience?&lt;&#x2F;li&gt;
&lt;li&gt;Do you need to get yourself out there?&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Or‚Ä¶&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Do you lack talent and skill too?&lt;&#x2F;li&gt;
&lt;li&gt;Does it really grind your mental cogs?&lt;&#x2F;li&gt;
&lt;li&gt;Do you catch yourself tuning out because it doesn‚Äôt engage you?&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Don‚Äôt try to force your brain or your personality into something it isn‚Äôt.&lt;&#x2F;p&gt;
&lt;p&gt;Be honest with yourself. As before, take the best you can from these limitations.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;ambidexterity&quot;&gt;Ambidexterity&lt;&#x2F;h3&gt;
&lt;p&gt;Some weaknesses are present because they are strengths in other areas. They exist on a spectrum. You might not be great at administering organisational policy or configuration, but excel at creating organic community around open-source projects. Maybe people energise you but data doesn‚Äôt?&lt;&#x2F;p&gt;
&lt;p&gt;Some things are a left-right brain tug-of-war and it‚Äôs simply rare to be ‚Äúambidextrous‚Äù and have both. Check your weaknesses for corresponding strengths. Let those discoveries motivate you and inspire you and kick that imposter syndrome in the butt.&lt;&#x2F;p&gt;
&lt;p&gt;Other things exist on that same spectrum and can be changed, but will cost you territory somewhere else. The strengths that make someone a great counsellor may have to be abandoned if they want to be a ring-in CEO who saves companies from the edge of bankruptcy.&lt;&#x2F;p&gt;
&lt;p&gt;But what about where you are ambidextrous? If you find something in yourself that is traditionally a rare coupling of strengths, use that in putting yourself that your counterparts are not. Got video-editing chops? Know how to code? How about use that to create dynamic, programmatically generated content!&lt;&#x2F;p&gt;
&lt;h2 id=&quot;augmenting-weakness&quot;&gt;Augmenting Weakness&lt;&#x2F;h2&gt;
&lt;p&gt;Sometimes you just have to eat your vegetables and push through. You need to get familiar with an unintuitive process in a role that you otherwise enjoy. That doesn‚Äôt mean you tap out and go on the hunt for your unicorn, but it doesn‚Äôt mean you have to endure it vanilla either.&lt;&#x2F;p&gt;
&lt;p&gt;Fortunately, we live in the age of AI. GPT-4O, Copilot, Gemini and Claude are all advanced enough to search the internet and provide great answers for topics they may not even have training on. RAG is affordable and easy. Let AI be your tutor and translate obtuse documentation for you.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;ai-tools&quot;&gt;AI Tools&lt;&#x2F;h3&gt;
&lt;p&gt;I was messing around with Powershell Universal the other day (for some quick form validation with backend Active Directory commands. I spent a few hours over a week getting into the nitty gritty of form components and schemas.&lt;&#x2F;p&gt;
&lt;p&gt;Out of curiosity, I tried asking GPT-4O to build me a form with my laundry list of fields and validations. To my surprise, it pumped out several hundred lines of code that only needed two adjustments to build and render successfully. I let it know and the successive builds were perfect every time. Prompting with further changes became quicker than navigating the code and adjusting it by hand.&lt;&#x2F;p&gt;
&lt;p&gt;Am I a frontend wizard now? Hardly. But it‚Äôs an augmented weakness now. It gets the job done and it doesn‚Äôt drain my mental capacity anymore. I can focus on what I‚Äôm good at.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Some more AI tools (all free):&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Cody (Sourcegraph‚Äôs AI IDE assistant)&lt;&#x2F;li&gt;
&lt;li&gt;Mods (Command-line pipeable AI)&lt;&#x2F;li&gt;
&lt;li&gt;Ollama (Offline self-hosted LLMs)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;what-you-don-t-know&quot;&gt;What you don‚Äôt know&lt;&#x2F;h3&gt;
&lt;p&gt;You don‚Äôt know what you don‚Äôt know. GPTs traditionally struggle with complex questions founded on poor understanding of the problem.&lt;&#x2F;p&gt;
&lt;p&gt;Remember the ‚ÄúChat‚Äù in Chat-GPT.&lt;&#x2F;p&gt;
&lt;p&gt;You don‚Äôt need to give mega-prompts.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Ask the right questions.&lt;&#x2F;li&gt;
&lt;li&gt;Ask broad questions.&lt;&#x2F;li&gt;
&lt;li&gt;Ask smaller questions.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;If you don‚Äôt know enough about the problem, don‚Äôt constrain AI to provide you with a solution that fits your suggested implementation of a solution.&lt;&#x2F;p&gt;
&lt;p&gt;The more you understand what you don‚Äôt know, the better chance you have of learning what you do need to know. It‚Äôs very easy to learn in the wrong direction.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;community&quot;&gt;Community&lt;&#x2F;h2&gt;
&lt;p&gt;Best for last.&lt;&#x2F;p&gt;
&lt;p&gt;Sometimes you need more organic discussion with specific experience. I.e. a real person.
If you have co-workers, ask them, and ask them if they know anyone too.&lt;&#x2F;p&gt;
&lt;p&gt;After your physical circles, try online communities:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;GitHub discussions, issues&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Relevant&lt;&#x2F;strong&gt; subreddits&lt;&#x2F;li&gt;
&lt;li&gt;Discord servers you find on Youtube channels&lt;&#x2F;li&gt;
&lt;li&gt;Forums (especially if they‚Äôre Discourse based)&lt;&#x2F;li&gt;
&lt;li&gt;LinkedIn (surprisingly)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Unlike GPTs who can listen to your thankless questions all day, community works best for everyone when involvement is not transactional, but relational. I‚Äôm not just talking about manners. You will get more relevant, helpful information when you prioritise relationships, and it will be more enjoyable.&lt;&#x2F;p&gt;
&lt;p&gt;Don‚Äôt underestimate the value of individuals. If someone has an answer for you, they likely have other relevant experience that could be useful to you, and you to them. When you do work you‚Äôre interested in, good at, and can find others of like-mind, you‚Äôre basically just making friends.&lt;&#x2F;p&gt;
&lt;p&gt;Tech-bros could learn a bit from truckies here. Truck drivers seem to know everyone and they‚Äôll ‚Äúknow a guy‚Äù for every job. We think we contribute to community when we share spicy memes or goofy comments with people we don‚Äôt know on socials, but that‚Äôs not it. Find your crowd and get to know its people.&lt;&#x2F;p&gt;
&lt;p&gt;Think about it yourself, if someone asked you if you ‚Äúknow a guy‚Äù in your tech circles. Would you point them to a person or a URL? Let that be your criteria for community.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;summing-up&quot;&gt;Summing up&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;Find out what you‚Äôre not good at.&lt;&#x2F;li&gt;
&lt;li&gt;Determine if you actually need to be good at it.&lt;&#x2F;li&gt;
&lt;li&gt;Don‚Äôt be tempted by Batman‚Äôs dangling carrots.&lt;&#x2F;li&gt;
&lt;li&gt;Use your ‚Äúambidextrous‚Äù strengths.&lt;&#x2F;li&gt;
&lt;li&gt;Leverage modern tooling.&lt;&#x2F;li&gt;
&lt;li&gt;Actively involve yourself in modern community.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Most importantly:&lt;&#x2F;p&gt;
&lt;p&gt;Do you really need to learn Rust? Can you settle for Go?&lt;&#x2F;p&gt;
</description>
      </item>
      <item>
          <title>AI for the Shell</title>
          <pubDate>Thu, 30 May 2024 00:00:00 +0000</pubDate>
          <author>Caleb Trevatt</author>
          <link>https://calebtrevatt.com/blog/ai-for-the-shell/</link>
          <guid>https://calebtrevatt.com/blog/ai-for-the-shell/</guid>
          <description xml:base="https://calebtrevatt.com/blog/ai-for-the-shell/">&lt;h2 id=&quot;what-is-it&quot;&gt;What is it?&lt;&#x2F;h2&gt;
&lt;p&gt;AI integration is becoming ubiquitous. Warp is pioneering ‚Äúthe terminal of the future‚Äù with AI capabilities built-in. VS Code supports extensions like Github Copilot and Cody, while Zed includes Zed AI. But what if you need a simple, versatile tool to bring AI into any conversation? Checkout &lt;strong&gt;Mods&lt;&#x2F;strong&gt;. Charm‚Äôs dev team and community are on a roll, producing some awesome new apps and libraries, and this is no exception. üëÄ&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;calebtrevatt.com&#x2F;blog&#x2F;ai-for-the-shell&#x2F;mods_img.png&quot; alt=&quot;Credit: Charmbracelet&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Mods takes the concept of prompting a GPT and brings it to the command line. It even supports piping stdin and stdout!
Any output from any command on your terminal, think &lt;code&gt;ls&lt;&#x2F;code&gt;, &lt;code&gt;cat&lt;&#x2F;code&gt;, &lt;code&gt;curl&lt;&#x2F;code&gt; and the like, can become input for Mods. Prompt it with some instructions on how to handle that data and you can either get rich feedback in your terminal or pipe the output for further processing.&lt;&#x2F;p&gt;
&lt;p&gt;Curious? Here are some examples!&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;h2 id=&quot;examples&quot;&gt;Examples&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;rich-markdown-output&quot;&gt;Rich Markdown Output&lt;&#x2F;h3&gt;
&lt;p&gt;Mods supports rich colour and formatting out-of-the-box. Install Charm‚Äôs Glow, set the default output format to markdown and every response will be pretty. ‚ú®&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;calebtrevatt.com&#x2F;blog&#x2F;ai-for-the-shell&#x2F;pokemon.gif&quot; alt=&quot;Disclaimer: I don‚Äôt know anything about Pokemon üò¨&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;evaluate-script-security&quot;&gt;Evaluate Script Security&lt;&#x2F;h3&gt;
&lt;p&gt;How about those inherently-unsafe one-liner shell script installers? Now finally safe with Mods! Here‚Äôs an example in WSL Ubuntu:
&lt;img src=&quot;https:&#x2F;&#x2F;calebtrevatt.com&#x2F;blog&#x2F;ai-for-the-shell&#x2F;oneliner.gif&quot; alt=&quot;Easily get a second opinion on shell script safety.&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;piping-github-api-data&quot;&gt;Piping GitHub API Data&lt;&#x2F;h3&gt;
&lt;p&gt;Feed it raw JSON data from an API. Here it is running in good old Powershell 5 on Windows 10:
&lt;img src=&quot;https:&#x2F;&#x2F;calebtrevatt.com&#x2F;blog&#x2F;ai-for-the-shell&#x2F;rate-repo.gif&quot; alt=&quot;Shameless plug for my cheeky repo.&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;piping-to-text-to-speech&quot;&gt;Piping to Text-to-Speech&lt;&#x2F;h3&gt;
&lt;p&gt;What about some text to speech? We can pipe stdout to a text to speech engine. Here‚Äôs a little example with Wsay, a Windows equivalent to ‚ÄúSay‚Äù on MacOS: &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;p-groarke&#x2F;wsay&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;p-groarke&#x2F;wsay&lt;&#x2F;a&gt;
&lt;img src=&quot;https:&#x2F;&#x2F;calebtrevatt.com&#x2F;blog&#x2F;ai-for-the-shell&#x2F;tts.gif&quot; alt=&quot;Duck haikus for life&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;blockquote class=&quot;tip&quot;&gt;
	&lt;p class=&quot;alert-title&quot;&gt;
		&lt;i class=&quot;icon&quot;&gt;&lt;&#x2F;i&gt;Tip&lt;&#x2F;p&gt;
	&lt;p&gt;It might be worth considering something a little more natural if you want it to read you bedtime stories. &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;pndurette&#x2F;gTTS&quot;&gt;Google text-to-speech&lt;&#x2F;a&gt; might be a better option.&lt;&#x2F;p&gt;

&lt;&#x2F;blockquote&gt;
&lt;audio controls&gt;
  &lt;source src=&quot;tts_limerick.wav&quot; type=&quot;audio&#x2F;wav&quot;&gt;
  Your browser does not support the audio element.
&lt;&#x2F;audio&gt;
&lt;h3 id=&quot;calling-in-a-loop&quot;&gt;Calling in a Loop&lt;&#x2F;h3&gt;
&lt;p&gt;You can even call it in a loop! This will ask for 10 fresh duck haikus. Each iteration is a new conversation. No conversational context; guaranteed freshness. üçÉ&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;powershell&quot; class=&quot;language-powershell z-code&quot;&gt;&lt;code class=&quot;language-powershell&quot; data-lang=&quot;powershell&quot;&gt;&lt;span class=&quot;z-source z-powershell&quot;&gt;&lt;span class=&quot;z-comment z-line z-powershell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-powershell&quot;&gt;#&lt;&#x2F;span&gt; 10 ü¶Ü haikus straight to your speakers!&lt;span class=&quot;z-punctuation z-definition z-comment z-powershell&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-powershell&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-powershell&quot;&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-powershell&quot;&gt;1&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-range z-powershell&quot;&gt;..&lt;&#x2F;span&gt;&lt;span class=&quot;z-constant z-numeric z-integer z-powershell&quot;&gt;10&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-other z-powershell&quot;&gt;|&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-control z-powershell&quot;&gt;%&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-scriptblock z-powershell&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-braces z-begin z-powershell&quot;&gt;{&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-double z-powershell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-powershell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;Tell me a haiku about ducks&lt;span class=&quot;z-punctuation z-definition z-string z-end z-powershell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-other z-powershell&quot;&gt;|&lt;&#x2F;span&gt; mods &lt;span class=&quot;z-keyword z-operator z-other z-powershell&quot;&gt;|&lt;&#x2F;span&gt; wsay &lt;span class=&quot;z-keyword z-operator z-assignment z-powershell&quot;&gt;-&lt;&#x2F;span&gt;o duck_haiku&lt;span class=&quot;z-support z-variable z-automatic z-powershell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-powershell&quot;&gt;$&lt;&#x2F;span&gt;_&lt;span class=&quot;z-variable z-other z-member z-powershell&quot;&gt;.wav&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-punctuation z-section z-braces z-end z-powershell&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; 
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;And in Bash, like so:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; class=&quot;language-bash z-code&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;    &lt;span class=&quot;z-keyword z-control z-loop z-for z-shell&quot;&gt;for&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-group z-for z-shell&quot;&gt; i &lt;span class=&quot;z-keyword z-control z-in z-shell&quot;&gt;in&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-group z-expansion z-brace z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-section z-expansion z-brace z-begin z-shell&quot;&gt;{&lt;&#x2F;span&gt;1..10&lt;span class=&quot;z-punctuation z-section z-expansion z-brace z-end z-shell&quot;&gt;}&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;    &lt;span class=&quot;z-keyword z-control z-loop z-do z-shell&quot;&gt;do&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;        &lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-support z-function z-echo z-shell&quot;&gt;echo&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; &lt;span class=&quot;z-string z-quoted z-double z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;Haiku time!&lt;span class=&quot;z-punctuation z-definition z-string z-end z-shell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-logical z-pipe z-shell&quot;&gt;|&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;mods&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-logical z-pipe z-shell&quot;&gt;|&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-function-call z-shell&quot;&gt;&lt;span class=&quot;z-variable z-function z-shell&quot;&gt;gtts-cli&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-meta z-function-call z-arguments z-shell&quot;&gt; -&lt;span class=&quot;z-variable z-parameter z-option z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-parameter z-shell&quot;&gt; --&lt;&#x2F;span&gt;output&lt;&#x2F;span&gt; duck_haiku&lt;span class=&quot;z-meta z-group z-expansion z-parameter z-shell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-shell&quot;&gt;$&lt;&#x2F;span&gt;&lt;span class=&quot;z-variable z-other z-readwrite z-shell&quot;&gt;i&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;.mp3&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-shell z-bash&quot;&gt;    &lt;span class=&quot;z-keyword z-control z-loop z-end z-shell&quot;&gt;done&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;For more examples check out the official ones from &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;charmbracelet&#x2F;mods&#x2F;blob&#x2F;main&#x2F;examples.md&quot;&gt;the Mods repo&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;multi-llm-support&quot;&gt;Multi LLM Support&lt;&#x2F;h2&gt;
&lt;p&gt;Mods supports multiple Large Language Models (LLMs) through multiple providers. Providing an OpenAI API key gets you a pretty quick out-of-box experience. It‚Äôs already set up to use OpenAI‚Äôs GPT-4 by default.&lt;&#x2F;p&gt;
&lt;p&gt;Pop open the settings with:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;mods --settings&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Note, you‚Äôll have to define a default &lt;code&gt;$EDITOR&lt;&#x2F;code&gt; in your environment variables.&lt;&#x2F;p&gt;
&lt;p&gt;You‚Äôll be greeted with the &lt;em&gt;mods.yml&lt;&#x2F;em&gt; file. Check out the APIs section. Mods supports:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;OpenAI&lt;&#x2F;strong&gt;: GPT-4O, GPT-4, GPT-3.5-Turbo, etc.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Azure&lt;&#x2F;strong&gt;: GPT-4O, GPT-4, GPT-3.5-Turbo, etc.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Perplexity AI&lt;&#x2F;strong&gt;: CodeLlama, Mistral, Claude 3, Sonar, etc.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Groq&lt;&#x2F;strong&gt;: Mixtral, Llama 2, Llama 3, etc.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;RunPod&lt;&#x2F;strong&gt;: OpenChat, Ollama, etc (IaaS&#x2F;SaaS)&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Local&lt;&#x2F;strong&gt;: Llama.cpp, GPT4ALL.cpp, etc. (local - GPU optional!)&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;blockquote class=&quot;note&quot;&gt;
	&lt;p class=&quot;alert-title&quot;&gt;
		&lt;i class=&quot;icon&quot;&gt;&lt;&#x2F;i&gt;Note&lt;&#x2F;p&gt;
	&lt;p&gt;Until today, I‚Äôd never tried Groq. Boy is it fast! Evidently, Groq provides &lt;a href=&quot;https:&#x2F;&#x2F;www.semianalysis.com&#x2F;p&#x2F;groq-inference-tokenomics-speed-but&quot;&gt;significantly faster inference&lt;&#x2F;a&gt; through next-gen hardware: Language Processing Units (LPUs).&lt;&#x2F;p&gt;
&lt;p&gt;API access is free, at least for now. I couldn‚Äôt find any official pricing anywhere. My guess is they‚Äôre relying on the free access to spread the word so they sell their chips üçüüí≤&lt;&#x2F;p&gt;
&lt;p&gt;Check it out: &lt;a href=&quot;https:&#x2F;&#x2F;groq.com&#x2F;?ref=ghost.notablegravity.com&quot;&gt;https:&#x2F;&#x2F;groq.com&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;

&lt;&#x2F;blockquote&gt;
&lt;pre data-lang=&quot;yaml&quot; class=&quot;language-yaml z-code&quot;&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-comment z-line z-number-sign z-yaml&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-comment z-line z-number-sign z-yaml&quot;&gt;#&lt;&#x2F;span&gt; Default model (gpt-3.5-turbo, gpt-4, ggml-gpt4all-j...).
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;default-model&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;gpt-4&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-other z-document z-end z-yaml&quot;&gt;...&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;apis&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;  &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;openai&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;    &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;base-url&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;https:&#x2F;&#x2F;api.openai.com&#x2F;v1&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;    &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;api-key&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;    &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;api-key-env&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;OPENAI_API_KEY&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;    &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;models&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;      &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;gpt-4&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;        &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;aliases&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-flow-sequence z-yaml&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-sequence z-begin z-yaml&quot;&gt;[&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-yaml&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-yaml&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;4&lt;span class=&quot;z-punctuation z-definition z-string z-end z-yaml&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-sequence z-end z-yaml&quot;&gt;]&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;        &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;max-input-chars&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;24500&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;        &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;fallback&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;gpt-3.5-turbo&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;      &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;gpt-4-1106-preview&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;        &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;aliases&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-meta z-flow-sequence z-yaml&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-sequence z-begin z-yaml&quot;&gt;[&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-yaml&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-yaml&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;128k&lt;span class=&quot;z-punctuation z-definition z-string z-end z-yaml&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-definition z-sequence z-end z-yaml&quot;&gt;]&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;        &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;max-input-chars&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-constant z-numeric z-integer z-decimal z-yaml&quot;&gt;392000&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;        &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-name z-tag z-yaml&quot;&gt;fallback&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-punctuation z-separator z-key-value z-mapping z-yaml&quot;&gt;:&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;gpt-4&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;&lt;span class=&quot;z-entity z-other z-document z-end z-yaml&quot;&gt;...&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Configuration is the same for all providers. Provide the base url, desired models, and specify aliases for those models. If you want to use a specific model, call it like this:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;&quot;What is gravity?&quot; | mods --model=&quot;Mixtral&quot;&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;You can also supply &lt;code&gt;-M&lt;&#x2F;code&gt; or &lt;code&gt;--Ask-Model&lt;&#x2F;code&gt; to interactively choose a model (though this seems to be ignored if you pass a prompt non-interactively).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;conversational-memory&quot;&gt;Conversational Memory&lt;&#x2F;h2&gt;
&lt;p&gt;Nice! Now when I was generating haikus I hard-sold amneisa as a feature for conversational freshness. What if we wanted to remember conversations across commands? Maybe with something more complicated‚Ä¶ Something that can‚Äôt be done ‚Äúzero-shot‚Äù?&lt;&#x2F;p&gt;
&lt;p&gt;Well thankfully Mods has some handy parameters that allow resuming and managing conversations:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;yaml&quot; class=&quot;language-yaml z-code&quot;&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;  &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;-c, --continue       Continue from the last response or a given save title.&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;  &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;-C, --continue-last  Continue from the last response.&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;  &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;-l, --list           Lists saved conversations.&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;  &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;-t, --title          Saves the current conversation with the given title.&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;  &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;-d, --delete         Deletes a saved conversation with the given title or ID.&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;  &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;-s, --show           Show a saved conversation with the given title or ID.&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-yaml&quot;&gt;  &lt;span class=&quot;z-string z-unquoted z-plain z-out z-yaml&quot;&gt;-S, --show-last      Show the last saved conversation.&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;a-really-heavy-example&quot;&gt;A Really Heavy Example&lt;&#x2F;h3&gt;
&lt;p&gt;Here‚Äôs a PowerShell commandlet I made (along with 59 other functions necessary to make it work). I use it to provision temporary user accounts for student exams at my workplace.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;New-Exam -D 10&#x2F;03 -FT 8 -TT 11 -Alloc 105 -U 5 -CC &quot;10SCI&quot;&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;My bespoke exam provisioning commandlet&lt;&#x2F;p&gt;
&lt;p&gt;For the sake of your screen real-estate I‚Äôve used the parameter aliases, but I will explain in a moment!&lt;&#x2F;p&gt;
&lt;p&gt;Essentially this commandlet:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Sets Active Directory account logon hours&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Sets account expiration time&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Sets group membership (for exam conditions)&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Validates users by name or student ID and fetches AD attributes&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Populates an HTML login sheet template with user data and exam details&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Merges the sheets into a PDF&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;And it saves me &lt;strong&gt;HOURS.&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;But one thing remains that sucks like a parasite at my remaining time and brain power:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;The exam login requests themselves.&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The problem is that login reqeuests aren‚Äôt consistent. Requests come in all shapes and sizes. Some come with multiple updates across a chain of emails. Some come in concise bullet points. Some say ‚Äúnext Wednesday‚Äù. Others say ‚Äú19&#x2F;05&#x2F;2024‚Äù.&lt;&#x2F;p&gt;
&lt;p&gt;What an excellent opportunity for AI ‚Äì and for Mods!&lt;&#x2F;p&gt;
&lt;h4 id=&quot;interfacing-with-the-commandlet&quot;&gt;Interfacing with the Commandlet&lt;&#x2F;h4&gt;
&lt;p&gt;So first I told Mods how to commandlet. works and the inputs and outputs I expect:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;powershell&quot; class=&quot;language-powershell z-code&quot;&gt;&lt;code class=&quot;language-powershell&quot; data-lang=&quot;powershell&quot;&gt;&lt;span class=&quot;z-source z-powershell&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-powershell&quot;&gt;&lt;span class=&quot;z-variable z-other z-readwrite z-powershell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-powershell&quot;&gt;$&lt;&#x2F;span&gt;Instructions&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-powershell&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-double z-powershell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-powershell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;New-Exam is a powershell commandlet.
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-powershell&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-powershell&quot;&gt;&amp;gt; It is used to create temporary Active Directory accounts for exams.
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-powershell&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-powershell&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-powershell&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-powershell&quot;&gt;&amp;gt; Here&amp;#39;s an example:
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-powershell&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-powershell&quot;&gt;&amp;gt; New-Exam -D 10&#x2F;03 -FT 8 -TT 11 -U 5 -S &lt;span class=&quot;z-punctuation z-definition z-string z-end z-powershell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;10SCI&lt;span class=&quot;z-string z-quoted z-double z-powershell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-powershell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt; -C
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-powershell&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-powershell&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-powershell&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-powershell&quot;&gt;&amp;gt; -D is &lt;span class=&quot;z-punctuation z-definition z-string z-end z-powershell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;date&lt;span class=&quot;z-string z-quoted z-double z-powershell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-powershell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-powershell&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-powershell&quot;&gt;&amp;gt; -FT is &lt;span class=&quot;z-punctuation z-definition z-string z-end z-powershell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-control z-powershell&quot;&gt;from&lt;&#x2F;span&gt; time&lt;span class=&quot;z-string z-quoted z-double z-powershell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-powershell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-powershell&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-powershell&quot;&gt;&amp;gt; -TT is &lt;span class=&quot;z-punctuation z-definition z-string z-end z-powershell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;to time&lt;span class=&quot;z-string z-quoted z-double z-powershell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-powershell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-powershell&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-powershell&quot;&gt;&amp;gt; -U is &lt;span class=&quot;z-punctuation z-definition z-string z-end z-powershell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;user count&lt;span class=&quot;z-string z-quoted z-double z-powershell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-powershell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-powershell&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-powershell&quot;&gt;&amp;gt; -S is &lt;span class=&quot;z-punctuation z-definition z-string z-end z-powershell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;subject&lt;span class=&quot;z-string z-quoted z-double z-powershell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-powershell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-powershell&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-powershell&quot;&gt;&amp;gt; -C is &lt;span class=&quot;z-punctuation z-definition z-string z-end z-powershell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;conditions&lt;span class=&quot;z-string z-quoted z-double z-powershell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-powershell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt; (do not include)
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-powershell&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-powershell&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-powershell&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-powershell&quot;&gt;&amp;gt; Follow the format of the example.
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-powershell&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-powershell&quot;&gt;&amp;gt; Output the exact command to run, no extra information or context.
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-powershell&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-powershell&quot;&gt;&amp;gt; If data is missing or invalid, output:
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-powershell&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-powershell&quot;&gt;&amp;gt; &amp;#39;echo &lt;span class=&quot;z-punctuation z-definition z-string z-end z-powershell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;Invalid &lt;span class=&quot;z-keyword z-control z-powershell&quot;&gt;data&lt;&#x2F;span&gt;: &lt;span class=&quot;z-constant z-numeric z-integer z-powershell&quot;&gt;___&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-powershell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-powershell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt; 
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-powershell&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-powershell&quot;&gt;&amp;gt; where blank is the invalid or missing data.
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-powershell&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-powershell&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-powershell&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-powershell&quot;&gt;&lt;span class=&quot;z-variable z-other z-readwrite z-powershell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-powershell&quot;&gt;$&lt;&#x2F;span&gt;Instructions&lt;&#x2F;span&gt; | mods --title=&lt;span class=&quot;z-punctuation z-definition z-string z-end z-powershell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;New Exam&lt;span class=&quot;z-string z-quoted z-double z-powershell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-powershell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;blockquote class=&quot;note&quot;&gt;
	&lt;p class=&quot;alert-title&quot;&gt;
		&lt;i class=&quot;icon&quot;&gt;&lt;&#x2F;i&gt;Note&lt;&#x2F;p&gt;
	&lt;p&gt;‚ÄúConditions‚Äù above I asked it not to include. The conditions aren‚Äôt difficult to pass, but for the sake of experimentation I left them out. Fortunately, if a mandatory parameter is left out of a PowerShell commandlet it will be prompted at runtime. Good to know!&lt;&#x2F;p&gt;

&lt;&#x2F;blockquote&gt;
&lt;h4 id=&quot;pushing-jobs&quot;&gt;Pushing Jobs&lt;&#x2F;h4&gt;
&lt;p&gt;Then I gave it an exam login request email.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;powershell&quot; class=&quot;language-powershell z-code&quot;&gt;&lt;code class=&quot;language-powershell&quot; data-lang=&quot;powershell&quot;&gt;&lt;span class=&quot;z-source z-powershell&quot;&gt;&lt;span class=&quot;z-variable z-other z-readwrite z-powershell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-variable z-powershell&quot;&gt;$&lt;&#x2F;span&gt;Message&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-assignment z-powershell&quot;&gt;=&lt;&#x2F;span&gt; &lt;span class=&quot;z-string z-quoted z-double z-powershell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-powershell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;Hi IT team!
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-powershell&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-powershell&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-powershell&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-powershell&quot;&gt;&amp;gt; We have a science exam on tomorrow.
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-powershell&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-powershell&quot;&gt;&amp;gt; 
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-powershell&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-powershell&quot;&gt;&amp;gt; Please can we have four logins?
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-powershell&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-powershell&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-powershell&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-powershell&quot;&gt;&amp;gt; - Disable internet
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-powershell&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-powershell&quot;&gt;&amp;gt; - No USB access
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-powershell&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-powershell&quot;&gt;&amp;gt; - They can have spellcheck
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-powershell&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-powershell&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-powershell&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-powershell&quot;&gt;&amp;gt; Start: 10:30, Finish: 12PM
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-powershell&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-powershell&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-powershell&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-powershell&quot;&gt;&amp;gt; Kind regards,
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-powershell&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-powershell&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-powershell&quot;&gt;&lt;span class=&quot;z-string z-quoted z-double z-powershell&quot;&gt;&amp;gt; Dane Joe&lt;span class=&quot;z-punctuation z-definition z-string z-end z-powershell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-powershell&quot;&gt;
&lt;&#x2F;span&gt;&lt;span class=&quot;z-source z-powershell&quot;&gt;$ Message &lt;span class=&quot;z-keyword z-operator z-other z-powershell&quot;&gt;|&lt;&#x2F;span&gt; mods &lt;span class=&quot;z-keyword z-operator z-assignment z-powershell&quot;&gt;-&lt;&#x2F;span&gt;&lt;span class=&quot;z-keyword z-operator z-assignment z-powershell&quot;&gt;-&lt;&#x2F;span&gt;continue&lt;span class=&quot;z-keyword z-operator z-assignment z-powershell&quot;&gt;=&lt;&#x2F;span&gt;&lt;span class=&quot;z-string z-quoted z-double z-powershell&quot;&gt;&lt;span class=&quot;z-punctuation z-definition z-string z-begin z-powershell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;New Exam&lt;span class=&quot;z-punctuation z-definition z-string z-end z-powershell&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt; &lt;span class=&quot;z-keyword z-operator z-other z-powershell&quot;&gt;|&lt;&#x2F;span&gt; &lt;span class=&quot;z-support z-function z-powershell&quot;&gt;Invoke-Expression&lt;&#x2F;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h4 id=&quot;retrospect&quot;&gt;Retrospect&lt;&#x2F;h4&gt;
&lt;p&gt;Running the commandlet is now as easy as ‚Äúcontinuing‚Äù the conversation with the previous context (the instructions) and piping it to PowerShell‚Äôs Invoke-Expression. Super easy!&lt;&#x2F;p&gt;
&lt;p&gt;I actually have a lot of validation built into the commandlet. Like what if the exam is on a Saturday? Shouldn‚Äôt happen. What if the subject is only offered in grade 12 and a grade 10 student is taking it? Shouldn‚Äôt happen.&lt;&#x2F;p&gt;
&lt;p&gt;I‚Äôm a little wonky about trusting validation to the mysterious &lt;em&gt;Latent Space&lt;&#x2F;em&gt;. Getting different answers to the same question asked twice makes me a little twitchy‚Ä¶ But technically all of those validation rules could be applied at the prompt context level instead.&lt;&#x2F;p&gt;
&lt;p&gt;Could this all be solved with a simple HTML form? Definitely! Yes.&lt;&#x2F;p&gt;
&lt;p&gt;Should it? Mmhmm. Probably!&lt;&#x2F;p&gt;
&lt;p&gt;As a general rule, if you want automation to produce consistently reliable outputs, you need consistently reliable inputs. AI ‚Äúmagics‚Äù away some of this, but it still requires some massaging and testing.&lt;&#x2F;p&gt;
&lt;p&gt;In a situation like this, if a user form was not an option, it would be a great candidate for an AI flow in LangChain or Flowise. I‚Äôm hoping to take a look at these soon!&lt;&#x2F;p&gt;
&lt;h2 id=&quot;wrapping-up&quot;&gt;Wrapping Up&lt;&#x2F;h2&gt;
&lt;p&gt;Mods is a great bridge between AI LLMs great demo of some cheap ad-hoc glue to try things out. Great for protyping, proof-of-concept, or ad-hoc formatting&#x2F;parsing&#x2F;sorting and the like. Perfect for someone like me who frequently gets caught up on the implementation details. With mods I can rapidly prototype in English, adjusting for desired behaviour with additional prompts. Once I‚Äôve got a proof of concept, I can lay down something more solid.&lt;&#x2F;p&gt;
&lt;p&gt;If an HTTP form This is actually a great use case for LangChain or Flowise. Hoping to take a look at these soon!&lt;&#x2F;p&gt;
</description>
      </item>
    </channel>
</rss>
